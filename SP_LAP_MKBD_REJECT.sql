create or replace 
PROCEDURE SP_LAP_MKBD_REJECT(
	   p_menu_name					T_many_HEADER.menu_name%TYPE,
	   p_update_date				T_many_HEADER.update_date%TYPE,
	   p_update_seq					T_many_HEADER.update_seq%TYPE,
	   p_reject_user_id				T_many_HEADER.user_id%TYPE,
	   p_reject_ip_address          T_many_HEADER.approved_ip_address%TYPE,
	   p_reject_reason				VARCHAR2,
	   p_error_code					OUT NUMBER,
	   p_error_msg					OUT VARCHAR2
	   ) IS
	   
	   
v_err EXCEPTION;
v_error_code						NUMBER;
v_error_msg							VARCHAR2(200);
V_TRX_DT DATE;
BEGIN
	
	
	BEGIN
		UPDATE T_many_HEADER
		SET approved_status = 'R',
		approved_user_id = p_reject_user_id,
		approved_date = SYSDATE,
		approved_ip_address = p_reject_ip_address,
		reject_reason = p_reject_reason
		WHERE menu_name = p_menu_name
		AND update_date = p_update_date
		AND update_seq = p_update_seq
		AND approved_status = 'E';
	EXCEPTION
	WHEN NO_DATA_FOUND THEN 
		v_error_code := -2;
		v_error_msg := SUBSTR('No found T_many_Header '||SQLERRM,1,200);
		RAISE v_err;
   
	WHEN OTHERS THEN
		v_error_code := -3;
		v_error_msg := SUBSTR('Update T_many_Header '||SQLERRM,1,200);
		RAISE v_err;
	END;

	
	
	
	
	
	BEGIN
		UPDATE INSISTPRO_RPT.LAP_MKBD_VD51 SET APPROVED_STAT='C'
				WHERE UPDATE_SEQ = P_UPDATE_SEQ AND UPDATE_DATE = P_UPDATE_DATE;
	EXCEPTION
			WHEN OTHERS THEN
				v_error_code := -2;
				v_error_msg :=  SUBSTR('UPDATE INSISTPRO_RPT.LAP_MKBD_VD51 '||SQLERRM,1,200);
				RAISE v_err;
		END;	
	BEGIN
		UPDATE INSISTPRO_RPT.LAP_MKBD_VD52 SET APPROVED_STAT='C'
				WHERE UPDATE_SEQ = P_UPDATE_SEQ AND UPDATE_DATE = P_UPDATE_DATE;
	EXCEPTION
			WHEN OTHERS THEN
				v_error_code := -3;
				v_error_msg :=  SUBSTR('UPDATE INSISTPRO_RPT.LAP_MKBD_VD52 '||SQLERRM,1,200);
				RAISE v_err;
		END;	
	BEGIN
		UPDATE INSISTPRO_RPT.LAP_MKBD_VD53 SET APPROVED_STAT='C'
				WHERE UPDATE_SEQ = P_UPDATE_SEQ AND UPDATE_DATE = P_UPDATE_DATE;
	EXCEPTION
			WHEN OTHERS THEN
				v_error_code := -4;
				v_error_msg :=  SUBSTR('UPDATE INSISTPRO_RPT.LAP_MKBD_VD53 '||SQLERRM,1,200);
				RAISE v_err;
		END;	
	BEGIN
		UPDATE INSISTPRO_RPT.LAP_MKBD_VD54 SET APPROVED_STAT='C'
				WHERE UPDATE_SEQ = P_UPDATE_SEQ AND UPDATE_DATE = P_UPDATE_DATE;
	EXCEPTION
			WHEN OTHERS THEN
				v_error_code := -5;
				v_error_msg :=  SUBSTR('UPDATE INSISTPRO_RPT.LAP_MKBD_VD54 '||SQLERRM,1,200);
				RAISE v_err;
		END;	
		
	BEGIN
		UPDATE INSISTPRO_RPT.LAP_MKBD_VD55 SET APPROVED_STAT='C'
				WHERE UPDATE_SEQ = P_UPDATE_SEQ AND UPDATE_DATE = P_UPDATE_DATE;
	EXCEPTION
			WHEN OTHERS THEN
				v_error_code := -6;
				v_error_msg :=  SUBSTR('UPDATE INSISTPRO_RPT.LAP_MKBD_VD55 '||SQLERRM,1,200);
				RAISE v_err;
		END;	

	BEGIN
		UPDATE INSISTPRO_RPT.LAP_MKBD_VD56 SET APPROVED_STAT='C'
				WHERE UPDATE_SEQ = P_UPDATE_SEQ AND UPDATE_DATE = P_UPDATE_DATE;
	EXCEPTION
			WHEN OTHERS THEN
				v_error_code := -7;
				v_error_msg :=  SUBSTR('UPDATE INSISTPRO_RPT.LAP_MKBD_VD56 '||SQLERRM,1,200);
				RAISE v_err;
		END;		
		
	BEGIN
		UPDATE INSISTPRO_RPT.LAP_MKBD_VD57 SET APPROVED_STAT='C'
				WHERE UPDATE_SEQ = P_UPDATE_SEQ AND UPDATE_DATE = P_UPDATE_DATE;
	EXCEPTION
			WHEN OTHERS THEN
				v_error_code := -8;
				v_error_msg :=  SUBSTR('UPDATE INSISTPRO_RPT.LAP_MKBD_VD57 '||SQLERRM,1,200);
				RAISE v_err;
		END;	
		
	BEGIN
		UPDATE INSISTPRO_RPT.LAP_MKBD_VD58 SET APPROVED_STAT='C'
				WHERE UPDATE_SEQ = P_UPDATE_SEQ AND UPDATE_DATE = P_UPDATE_DATE;
	EXCEPTION
			WHEN OTHERS THEN
				v_error_code := -9;
				v_error_msg :=  SUBSTR('UPDATE INSISTPRO_RPT.LAP_MKBD_VD58 '||SQLERRM,1,200);
				RAISE v_err;
		END;	
	BEGIN
		UPDATE INSISTPRO_RPT.LAP_MKBD_VD59 SET APPROVED_STAT='C'
				WHERE UPDATE_SEQ = P_UPDATE_SEQ AND UPDATE_DATE = P_UPDATE_DATE;
	EXCEPTION
			WHEN OTHERS THEN
				v_error_code := -10;
				v_error_msg :=  SUBSTR('UPDATE INSISTPRO_RPT.LAP_MKBD_VD59 '||SQLERRM,1,200);
				RAISE v_err;
		END;
	BEGIN
		UPDATE INSISTPRO_RPT.LAP_MKBD_VD510A SET APPROVED_STAT='C'
				WHERE UPDATE_SEQ = P_UPDATE_SEQ AND UPDATE_DATE = P_UPDATE_DATE;
	EXCEPTION
			WHEN OTHERS THEN
				v_error_code := -11;
				v_error_msg :=  SUBSTR('UPDATE INSISTPRO_RPT.LAP_MKBD_VD510A '||SQLERRM,1,200);
				RAISE v_err;
		END;	
	BEGIN
		UPDATE INSISTPRO_RPT.LAP_MKBD_VD510B SET APPROVED_STAT='C'
				WHERE UPDATE_SEQ = P_UPDATE_SEQ AND UPDATE_DATE = P_UPDATE_DATE;
	EXCEPTION
			WHEN OTHERS THEN
				v_error_code := -12;
				v_error_msg :=  SUBSTR('UPDATE INSISTPRO_RPT.LAP_MKBD_VD510B '||SQLERRM,1,200);
				RAISE v_err;
		END;	
	BEGIN
		UPDATE INSISTPRO_RPT.LAP_MKBD_VD510C SET APPROVED_STAT='C'
				WHERE UPDATE_SEQ = P_UPDATE_SEQ AND UPDATE_DATE = P_UPDATE_DATE;
	EXCEPTION
			WHEN OTHERS THEN
				v_error_code := -13;
				v_error_msg :=  SUBSTR('UPDATE INSISTPRO_RPT.LAP_MKBD_VD510C '||SQLERRM,1,200);
				RAISE v_err;
		END;	
	BEGIN
		UPDATE INSISTPRO_RPT.LAP_MKBD_VD510D SET APPROVED_STAT='C'
				WHERE UPDATE_SEQ = P_UPDATE_SEQ AND UPDATE_DATE = P_UPDATE_DATE;
	EXCEPTION
			WHEN OTHERS THEN
				v_error_code := -14;
				v_error_msg :=  SUBSTR('UPDATE INSISTPRO_RPT.LAP_MKBD_VD510D '||SQLERRM,1,200);
				RAISE v_err;
		END;	
		
	BEGIN
		UPDATE INSISTPRO_RPT.LAP_MKBD_VD510E SET APPROVED_STAT='C'
				WHERE UPDATE_SEQ = P_UPDATE_SEQ AND UPDATE_DATE = P_UPDATE_DATE;
	EXCEPTION
			WHEN OTHERS THEN
				v_error_code := -15;
				v_error_msg :=  SUBSTR('UPDATE INSISTPRO_RPT.LAP_MKBD_VD510E '||SQLERRM,1,200);
				RAISE v_err;
		END;		
	BEGIN
		UPDATE INSISTPRO_RPT.LAP_MKBD_VD510F SET APPROVED_STAT='C'
				WHERE UPDATE_SEQ = P_UPDATE_SEQ AND UPDATE_DATE = P_UPDATE_DATE;
	EXCEPTION
			WHEN OTHERS THEN
				v_error_code := -16;
				v_error_msg :=  SUBSTR('UPDATE INSISTPRO_RPT.LAP_MKBD_VD510F '||SQLERRM,1,200);
				RAISE v_err;
		END;		
	BEGIN
		UPDATE INSISTPRO_RPT.LAP_MKBD_VD510G SET APPROVED_STAT='C'
				WHERE UPDATE_SEQ = P_UPDATE_SEQ AND UPDATE_DATE = P_UPDATE_DATE;
	EXCEPTION
			WHEN OTHERS THEN
				v_error_code := -17;
				v_error_msg :=  SUBSTR('UPDATE INSISTPRO_RPT.LAP_MKBD_VD510G '||SQLERRM,1,200);
				RAISE v_err;
		END;		
	BEGIN
		UPDATE INSISTPRO_RPT.LAP_MKBD_VD510H SET APPROVED_STAT='C'
				WHERE UPDATE_SEQ = P_UPDATE_SEQ AND UPDATE_DATE = P_UPDATE_DATE;
	EXCEPTION
			WHEN OTHERS THEN
				v_error_code := -18;
				v_error_msg :=  SUBSTR('UPDATE INSISTPRO_RPT.LAP_MKBD_VD510H '||SQLERRM,1,200);
				RAISE v_err;
		END;		
	BEGIN
		UPDATE INSISTPRO_RPT.LAP_MKBD_VD510I SET APPROVED_STAT='C'
				WHERE UPDATE_SEQ = P_UPDATE_SEQ AND UPDATE_DATE = P_UPDATE_DATE;
	EXCEPTION
			WHEN OTHERS THEN
				v_error_code := -19;
				v_error_msg :=  SUBSTR('UPDATE INSISTPRO_RPT.LAP_MKBD_VD510I '||SQLERRM,1,200);
				RAISE v_err;
		END;		
	COMMIT;	
   	p_error_code := 1;
	p_error_msg := '';


	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			NULL;
		WHEN v_err THEN
			p_error_code := v_error_code;
			p_error_msg :=  v_error_msg;
			ROLLBACK;

		WHEN OTHERS THEN
			ROLLBACK;
			p_error_code := -1;
			p_error_msg := SUBSTR(SQLERRM,1,200);
			RAISE;
END SP_LAP_MKBD_REJECT;