CREATE OR REPLACE 
PROCEDURE FUND_BANK_MVMT_IMPORT(
P_BANK_CD MST_FUND_BANK.BANK_CD%TYPE,
P_DATA VARCHAR2,
VO_EFF_DT OUT DATE,
VO_FAIL OUT NUMBER,
VO_ERRCD OUT NUMBER,
VO_ERRMSG OUT VARCHAR2) IS
/******************************************************************************
   NAME:       FUND_BANK_MVMT_IMPORT
   PURPOSE:

   REVISIONS:
   VER        DATE        AUTHOR           DESCRIPTION
   ---------  ----------  ---------------  ------------------------------------
   1.0        24/07/2012          1. CREATED THIS PROCEDURE.

******************************************************************************/
--P_DATA T_FUND_BANK_FORMAT.COLDESC%TYPE,
CURSOR CSR_FMT(A_BANK_CD MST_FUND_BANK.BANK_CD%TYPE) IS
SELECT
BANK_CD, LINE_TYPE, COLSEQ,
   COLTYPE, COLWIDTH, COLFMT,
   COLDESC, FIELDSEQ
FROM T_FUND_BANK_FORMAT
WHERE BANK_CD = A_BANK_CD
AND LINE_TYPE = 'MVMT'
AND COLSEQ > 0
ORDER BY COLSEQ;


V_KODEAB T_BANK_MUTATION.KODEAB%TYPE;
V_NAMAAB T_BANK_MUTATION.NAMAAB%TYPE;
V_RDN T_BANK_MUTATION.RDN%TYPE;
V_SID T_BANK_MUTATION.SID%TYPE;
V_SRE T_BANK_MUTATION.SRE%TYPE;
V_NAMANASABAH T_BANK_MUTATION.NAMANASABAH%TYPE;
V_TANGGALEFEKTIF T_BANK_MUTATION.TANGGALEFEKTIF%TYPE;
V_TANGGALTIMESTAMP T_BANK_MUTATION.TANGGALTIMESTAMP%TYPE;
V_INSTRUCTIONFROM T_BANK_MUTATION.INSTRUCTIONFROM%TYPE;
V_COUNTERPARTACCOUNT T_BANK_MUTATION.COUNTERPARTACCOUNT%TYPE;
V_TYPEMUTASI T_BANK_MUTATION.TYPEMUTASI%TYPE;
V_TRANSACTIONTYPE T_BANK_MUTATION.TRANSACTIONTYPE%TYPE;
V_CURRENCY T_BANK_MUTATION.CURRENCY%TYPE;
V_BEGINNINGBALANCE T_BANK_MUTATION.BEGINNINGBALANCE%TYPE;
V_TRANSACTIONVALUE T_BANK_MUTATION.TRANSACTIONVALUE%TYPE;
V_CLOSINGBALANCE T_BANK_MUTATION.CLOSINGBALANCE%TYPE;
V_REMARK T_BANK_MUTATION.REMARK%TYPE;
V_BANKREFERENCE T_BANK_MUTATION.BANKREFERENCE%TYPE;
V_BANKID T_BANK_MUTATION.BANKID%TYPE;


 V_DELIMTR CHAR(1);
 V_FROM NUMBER;
 V_STR VARCHAR2(200);
 V_DATE DATE;
 V_NUM T_BANK_MUTATION.TRANSACTIONVALUE%TYPE;
V_IP CHAR(4);
V_CIMB_TAX_INTEREST CHAR(3);

 VL_ERR EXCEPTION;
 VL_ERRCD NUMBER;
 VL_ERRMSG		VARCHAR2(200);
 VL_FAIL CHAR(1);
 VL_CNT NUMBER;

 V_DATA VARCHAR2(500);
BEGIN

   BEGIN
   SELECT COLFMT INTO V_DELIMTR
	FROM T_FUND_BANK_FORMAT
	WHERE BANK_CD = P_BANK_CD
	AND LINE_TYPE = 'MVMT'
	AND COLTYPE = 'DELIM';
	EXCEPTION
	WHEN NO_DATA_FOUND THEN
		VL_ERRCD := -1;
		VL_ERRMSG := 'DELIMITER NOT FOUND IN T_FUND_BANK_FORMAT ';
		RAISE VL_ERR;
	END;

--V_DATA := '1460115490181IDD010441798266PF00113060011720120827ANDREAS BUDHI G                         201208272012-08-27-08.10.57.221000IDRBNGA3000000020747921C000005000000000N911400000502074792112082790440011                                                                                      DR  2650100654005 KE 1460115490181      5576922650191610                        ATM OB CA/IDR-SA/IDR                                        005';

/*
V_DATA := V_DATA||'201207232012-07-23-10.35.10.653000IDRBNGA3000000000000000C000001654125000N9154000001654125000';
V_DATA := V_DATA||'12072394252262                                                                                      ';
V_DATA := V_DATA||'DARMAWAN SURIA 18.07.12                                                         DR 4800100418000 KE 0001460100096120                        005';
*/


	V_FROM := 1;
	FOR REC IN CSR_FMT(P_BANK_CD)
	LOOP


		V_STR := SUBSTR(P_DATA, V_FROM, REC.COLWIDTH);
		IF REC.COLTYPE = 'DATE' THEN
		   V_DATE := TO_DATE(V_STR,REC.COLFMT);
		END IF;

		
		IF REC.COLTYPE = 'NUM' AND REC.COLFMT = '.' THEN
		   V_NUM := TO_NUMBER(V_STR);
		END IF;

		IF REC.COLTYPE = 'NUM' AND REC.COLFMT IS NULL THEN
		   IF  INSTR('0123456789',SUBSTR(V_STR,-1,1)) > 0 THEN
		   
			   IF TO_NUMBER(V_STR) = 0 THEN
			      V_NUM := 0;
				ELSE
			   V_NUM := TO_NUMBER(V_STR) / 100;
			   END IF;
		   ELSE
		   	  V_NUM := -1; 
		   END IF;
		END IF;

		IF REC.FIELDSEQ = 1 THEN
		   V_KODEAB := TRIM(V_STR);
		END IF;

		IF REC.FIELDSEQ = 2 THEN
		   V_NAMAAB := SUBSTR(TRIM(V_STR),1,25);
		END IF;

		IF REC.FIELDSEQ = 3 THEN
		   V_RDN := TRIM(V_STR);
		END IF;

		IF REC.FIELDSEQ = 4 THEN
		   V_SID := TRIM(V_STR);
		END IF;

		IF REC.FIELDSEQ = 5 THEN
		   V_SRE := TRIM(V_STR);
		END IF;

		IF REC.FIELDSEQ = 6 THEN
		   V_NAMANASABAH := TRIM(V_STR);
		END IF;

		IF REC.FIELDSEQ = 7 THEN
		   V_TANGGALEFEKTIF := V_DATE;
		      VO_EFF_DT := V_DATE;

		END IF;

		IF REC.FIELDSEQ = 8 THEN
		   V_TANGGALTIMESTAMP := V_DATE;
		END IF;

		IF REC.FIELDSEQ = 9 THEN
		   V_INSTRUCTIONFROM := TRIM(V_STR);
		END IF;

		IF REC.FIELDSEQ = 10 THEN
		   V_COUNTERPARTACCOUNT := TRIM(V_STR);
		END IF;

		IF REC.FIELDSEQ = 11 THEN
		   V_TYPEMUTASI := TRIM(V_STR);
		END IF;

		IF REC.FIELDSEQ = 12 THEN
		   V_TRANSACTIONTYPE := TRIM(V_STR);
		END IF;

		IF REC.FIELDSEQ = 13 THEN
		   V_CURRENCY := TRIM(V_STR);
		END IF;

		IF REC.FIELDSEQ = 14 THEN
		   V_BEGINNINGBALANCE := V_NUM;
		END IF;

		IF REC.FIELDSEQ = 15 THEN
		   V_TRANSACTIONVALUE := V_NUM;
		END IF;

		IF REC.FIELDSEQ = 16 THEN
		   IF V_NUM = -1 THEN
		      IF V_TYPEMUTASI = 'D' THEN
		   	  V_CLOSINGBALANCE := V_BEGINNINGBALANCE - V_TRANSACTIONVALUE;
			  ELSE
		   	  V_CLOSINGBALANCE := V_BEGINNINGBALANCE + V_TRANSACTIONVALUE;
			  END IF;
		   ELSE	   
		   	  V_CLOSINGBALANCE := V_NUM;
		   END IF;	
		   IF   V_BEGINNINGBALANCE = -1 THEN
		   		IF V_TYPEMUTASI = 'D' THEN
				   V_BEGINNINGBALANCE :=V_CLOSINGBALANCE + V_TRANSACTIONVALUE;
				ELSE
		   			V_BEGINNINGBALANCE :=V_CLOSINGBALANCE - V_TRANSACTIONVALUE;
				END IF;	
		   END IF;		
		END IF;

		IF REC.FIELDSEQ = 17 THEN
		   V_REMARK := SUBSTR(TRIM(V_STR),1,36);
		END IF;

		IF REC.FIELDSEQ = 18 THEN
		   V_BANKREFERENCE := TRIM(V_STR);
		END IF;

		IF REC.FIELDSEQ = 19 THEN
		   V_BANKID := TRIM(V_STR);
   
		END IF;

		IF REC.FIELDSEQ = 97 THEN -- UTK CIMB
		   
		   V_CIMB_TAX_INTEREST:= TRIM(V_STR);
		END IF;
		
		IF REC.FIELDSEQ = 98 THEN -- UTK CIMB
		   
		   V_IP := TRIM(V_STR);
		END IF;

		IF V_DELIMTR IS NULL THEN
		   IF REC.FIELDSEQ = 98 THEN -- UTK CIMB
		   V_FROM := V_FROM;
		   ELSE
		   V_FROM := V_FROM +  REC.COLWIDTH;
		   END IF;
		ELSE
		   V_FROM := V_FROM +  REC.COLWIDTH +1;
		END IF;


	END LOOP;

	IF V_INSTRUCTIONFROM IS NULL THEN -- UTK CIMB
	   IF V_TYPEMUTASI = 'C' THEN
	   	  V_INSTRUCTIONFROM := 'X';
		ELSE
		  V_INSTRUCTIONFROM := V_RDN;
	   END IF;
	END IF;

	IF V_COUNTERPARTACCOUNT IS NULL THEN -- UTK CIMB
	   IF V_TYPEMUTASI = 'D' THEN
	   	  V_COUNTERPARTACCOUNT := V_RDN;
		ELSE
		  V_COUNTERPARTACCOUNT := 'X';
	   END IF;
	END IF;

	IF V_BANKID = 'BNGA3' THEN
		IF V_IP = '@IP@' THEN -- UTK CIMB
		   V_TRANSACTIONTYPE := V_IP;
		ELSE 
			 IF V_CIMB_TAX_INTEREST = '198' OR V_CIMB_TAX_INTEREST = '160' OR V_CIMB_TAX_INTEREST = '005' THEN
			   V_TRANSACTIONTYPE := V_CIMB_TAX_INTEREST;
			 END IF;  
		END IF;
	END IF;	

	BEGIN
	FUND_BANK_MVMT_VALIDATION(V_KODEAB,
		V_NAMAAB,
		V_RDN,
		V_SID,
		V_SRE,
		V_NAMANASABAH,
		V_TANGGALEFEKTIF,
		V_TANGGALTIMESTAMP,
		V_INSTRUCTIONFROM,
		V_COUNTERPARTACCOUNT,
		V_TYPEMUTASI,
		V_TRANSACTIONTYPE,
		V_CURRENCY,
		V_BEGINNINGBALANCE,
		V_TRANSACTIONVALUE,
		V_CLOSINGBALANCE,
		V_REMARK,
		V_BANKREFERENCE,
		V_BANKID,
		VL_FAIL,
		VL_ERRCD,
		VL_ERRMSG
		);
	EXCEPTION
	WHEN OTHERS THEN
		 VL_ERRCD := -1;
		VL_ERRMSG := 'SP BANK VALIDATION : '||V_BANKREFERENCE||V_NAMANASABAH||SQLERRM(SQLCODE);
		RAISE VL_ERR;
	END;

	IF VL_FAIL = 'Y' THEN
	   VO_FAIL := 1;
	ELSE
		VO_FAIL := 0;   
		BEGIN
		SP_BANK_MUTATION_UPDATE(V_KODEAB,
			V_NAMAAB,
			V_RDN,
			V_SID,
			V_SRE,
			V_NAMANASABAH,
			V_TANGGALEFEKTIF,
			V_TANGGALTIMESTAMP,
			V_INSTRUCTIONFROM,
			V_COUNTERPARTACCOUNT,
			V_TYPEMUTASI,
			V_TRANSACTIONTYPE,
			V_CURRENCY,
			V_BEGINNINGBALANCE,
			V_TRANSACTIONVALUE,
			V_CLOSINGBALANCE,
			V_REMARK,
			V_BANKREFERENCE,
			V_BANKID,
			VL_ERRCD,
			VL_ERRMSG);
		EXCEPTION
		WHEN OTHERS THEN
			 VL_ERRCD := -1;
			VL_ERRMSG := 'SP BANK REF : '||V_BANKREFERENCE||V_NAMANASABAH||SQLERRM(SQLCODE);
			RAISE VL_ERR;
		END;
	END IF;

	IF VL_ERRCD	= -1 THEN
	   VO_ERRCD := VL_ERRCD;
	   RAISE VL_ERR;
	END IF;


	VO_ERRCD := 1;
	VO_ERRMSG := '';
   EXCEPTION
     WHEN VL_ERR THEN
	 VO_ERRCD := VL_ERRCD;
	 VO_ERRMSG := VL_ERRMSG;
		ROLLBACK;
END FUND_BANK_MVMT_IMPORT;
