create or replace PROCEDURE SPR_TRX_NSB_PER_KATEGORI(
    P_YEAR   NUMBER,
    P_USER_ID    VARCHAR2,
    P_GENERATE_DATE DATE,
    P_RANDOM_VALUE OUT NUMBER,
    P_ERROR_CD OUT NUMBER,
    P_ERROR_MSG OUT VARCHAR2 )
  IS
  V_ERR          EXCEPTION;
  V_ERROR_CODE   NUMBER;
  V_ERROR_MSG    VARCHAR2(200);
  V_RANDOM_VALUE NUMBER; 
  V_BGN_YEAR DATE;
  V_END_YEAR DATE;
  i integer;

  BEGIN
  
  V_RANDOM_VALUE := ABS(DBMS_RANDOM.RANDOM);    
  BEGIN
    SP_RPT_REMOVE_RAND('R_TRX_NSB_PER_KATEGORI',V_RANDOM_VALUE,V_ERROR_CODE,V_ERROR_MSG);
  EXCEPTION
  WHEN OTHERS THEN
    V_ERROR_CODE  := -2;
    V_ERROR_MSG := SUBSTR('SP_RPT_REMOVE_RAND '||SQLERRM(SQLCODE),1,200);
    RAISE V_err;
  END;
  
  IF V_ERROR_CODE<0 THEN
    V_ERROR_CODE  := -15;
    V_ERROR_MSG := 'CALL SP_RPT_REMOVE_RAND '||V_ERROR_MSG;
    RAISE V_err;
  END IF;

   FOR I IN 1..2 LOOP
   
   BEGIN
   INSERT INTO R_TRX_NSB_PER_KATEGORI( TAHUN,SEMESTER,GRP_1,GRP_2,GRP_3,NO_URUT,KETERANGAN,
    JML_NASABAH,PERD_SAHAM,PERD_OBLIGASI_KORP,PERD_SBN,PERD_DLL,
    SEKU_SAHAM,SEKU_OBLIGASI_KORP,SEKU_SBN,SEKU_DLL,
    RAND_VALUE,USER_ID,GENERATE_DATE,TXT)
   SELECT P_YEAR,i SEMESTER,GRP_1,GRP_2,GRP_3,NO_URUT, KETERANGAN,
   0 JML_NASABAH,0 PERD_SAHAM ,0 PERD_OBLIGASI_KORP,0 PERD_SBN,0 PERD_DLL,
   0 SEKU_SAHAM,0 SEKU_OBLIGASI_KORP,0 SEKU_SBN,0 SEKU_DLL,
   V_RANDOM_VALUE,P_USER_ID,P_GENERATE_DATE, TXT
    FROM FORM_KATEGORI_TRX_NSB WHERE TAHUN=2017 AND VERSI=1;
    EXCEPTION
    WHEN OTHERS THEN
      V_ERROR_CODE :=-20;
      V_ERROR_MSG := SUBSTR('INSERT INTO R_TRX_NSB_PER_KATEGORI '||SQLERRM(SQLCODE),1,200);
      RAISE V_ERR;
    END;

  END LOOP;

V_BGN_YEAR := TO_DATE('0101'||P_YEAR,'DDMMYYYY');
V_END_YEAR := TO_dATE('3112'||P_YEAR,'DDMMYYYY');

    --jumlah nasabah per kategori
    BEGIN
    SP_TMP_TRX_JML_NSB_KATEGORI(V_BGN_YEAR,
                            V_END_YEAR,
                            P_USER_ID,
                            V_RANDOM_VALUE,
                            V_ERROR_CODE,
                            V_ERROR_MSG);
     EXCEPTION
     WHEN OTHERS THEN
      V_ERROR_CODE :=-25;
      V_ERROR_MSG := SUBSTR('CALL SP_TMP_TRX_JML_NSB_KATEGORI'||SQLERRM(SQLCODE),1,200);
      RAISE V_ERR;
    END;

    IF V_ERROR_CODE<0 THEN
     V_ERROR_CODE :=-26;
      V_ERROR_MSG := SUBSTR('CALL SP_TMP_TRX_JML_NSB_KATEGORI'||V_ERROR_CODE,1,200);
      RAISE V_ERR;
    END IF;

    --SAHAM PERDANA
    BEGIN
    SP_TMP_TRX_SAHAM_PERDANA(V_BGN_YEAR,
                            V_END_YEAR,
                            P_USER_ID,
                            V_RANDOM_VALUE,
                            V_ERROR_CODE,
                            V_ERROR_MSG);
     EXCEPTION
        WHEN OTHERS THEN
          V_ERROR_CODE :=-30;
          V_ERROR_MSG := SUBSTR('CALL SP_TMP_TRX_SAHAM_PERDANA'||SQLERRM(SQLCODE),1,200);
          RAISE V_ERR;
    END;

    IF V_ERROR_CODE<0 THEN
     V_ERROR_CODE :=-31;
      V_ERROR_MSG := SUBSTR('CALL SP_TMP_TRX_SAHAM_PERDANA'||V_ERROR_CODE,1,200);
      RAISE V_ERR;
    END IF;

    COMMIT;
    P_RANDOM_VALUE := V_RANDOM_VALUE;
    P_ERROR_CD  :=1;
    P_ERROR_MSG :='';
  EXCEPTION
  WHEN V_ERR THEN
    ROLLBACK;
    P_ERROR_CD  := V_ERROR_CODE;
    P_ERROR_MSG := V_ERROR_MSG;
  WHEN OTHERS THEN
    P_ERROR_CD  :=-1;
    P_ERROR_MSG :=SUBSTR(SQLCODE||' '||SQLERRM,1,200);
    RAISE;
  END SPR_TRX_NSB_PER_KATEGORI;