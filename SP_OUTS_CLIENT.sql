create or replace PROCEDURE SP_OUTS_CLIENT IS


V_ERR EXCEPTION;
V_ERROR_CODE NUMBER;
V_ERROR_MSG VARCHAR2(200);
V_BGN_DATE DATE;
V_END_DATE DATE :=TRUNC(SYSDATE);
V_CNT NUMBER;
BEGIN


  V_BGN_DATE := TO_DATE('01'||TO_CHAR(GET_DOC_DATE(3,V_END_DATE),'MMYYYY'),'DDMMYYYY');

BEGIN
SELECT COUNT(1) INTO V_CNT FROM T_OUTS_CLIENT;
EXCEPTION
WHEN OTHERS THEN
  V_ERROR_CODE:=-10;
  V_ERROR_MSG :=SUBSTR('SELECT COUNT T_OUTS_CLIENT '||SQLERRM,1,200);
  RAISE V_ERR;
END;

IF V_CNT>0 THEN 
    BEGIN
    DELETE FROM T_OUTS_CLIENT;
    EXCEPTION
    WHEN OTHERS THEN
      V_ERROR_CODE:=-20;
      V_ERROR_MSG :=SUBSTR('DELETE T_OUTS_CLIENT '||SQLERRM,1,200);
      RAISE V_ERR;
    END;

END IF;

BEGIN
INSERT INTO T_OUTS_CLIENT(DOC_DATE,CLIENT_CD,NET_AMT)

 select V_BGN_DATE, sl_Acct_cd,sum(net_amt)net_amt from
    (
    SELECT SL_ACCT_CD, DECODE(A.DB_CR_FLG,'D',CURR_VAL,-CURR_VAL) NET_AMT
      FROM T_ACCOUNT_LEDGER A, MST_CLIENT M, (
          SELECT GL_A FROM MST_GLA_TRX WHERE JUR_TYPE='REPO'
        ) G
      WHERE A.SL_ACCT_CD=M.CLIENT_CD
      AND A.DOC_DATE BETWEEN V_BGN_DATE AND V_END_DATE
      AND DUE_DATE          < V_END_DATE
      AND M.CLIENT_TYPE_1  <>'B'
      AND A.APPROVED_STS    = 'A'
      AND M.APPROVED_STAT   ='A'
      AND A.REVERSAL_JUR    ='N'
      AND A.RECORD_SOURCE  <>'RE'
      AND TRIM(A.GL_ACCT_CD)=G.GL_A(+)
      AND G.GL_A           IS NULL
      UNION ALL
      SELECT SL_ACCT_CD, NVL(B.DEB_OBAL,0)-NVL(B.CRE_OBAL,0) BEG_BAL
      FROM T_DAY_TRS B, MST_CLIENT M, (
          SELECT GL_A FROM MST_GLA_TRX WHERE JUR_TYPE='REPO'
        )G
      WHERE B.SL_ACCT_CD                       =M.CLIENT_CD
      AND TRIM(B.GL_ACCT_CD)                   = G.GL_A(+)
      AND G.GL_A                              IS NULL
      AND B.TRS_DT                             = V_BGN_DATE
      AND M.APPROVED_STAT                      ='A'
      AND M.CLIENT_TYPE_1                     <> 'B'
      AND NVL(B.DEB_OBAL,0)-NVL(B.CRE_OBAL,0) <>0
      )
      group by sl_acct_cd
      HAVING sum(net_amt)<>0; 
EXCEPTION
WHEN OTHERS THEN
  V_ERROR_CODE:=-30;
  V_ERROR_MSG :=SUBSTR('INSERT T_OUTS_CLIENT '||SQLERRM,1,200);
  RAISE V_ERR;
END;

EXCEPTION
WHEN V_ERR THEN

BEGIN
  SP_INSERT_ORCL_ERRLOG('INSISTPRO_RPT', 'ORCLBO', 'PROCEDURE : SP_OUTS_SL_CODE ', V_ERROR_CODE||' '||V_ERROR_MSG);
END;

ROLLBACK;
WHEN OTHERS THEN
ROLLBACK;

BEGIN
  SP_INSERT_ORCL_ERRLOG('INSISTPRO_RPT', 'ORCLBO', 'PROCEDURE : SP_OUTS_SL_CODE ', V_ERROR_CODE||' '||V_ERROR_MSG);
END;

END SP_OUTS_CLIENT;