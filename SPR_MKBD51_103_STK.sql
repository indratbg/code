create or replace PROCEDURE SPR_MKBD51_103_STK(
    P_BGN_DATE DATE,
    P_END_DATE DATE,
    P_BGN_STOCK T_CLOSE_PRICE.STK_CD%TYPE,
    P_END_STOCK T_CLOSE_PRICE.STK_CD%TYPE,
    P_BGN_CLIENT MST_CLIENT.CLIENT_CD%TYPE,
    P_END_CLIENT MST_CLIENT.CLIENT_CD%TYPE,
    P_USER_ID       VARCHAR2,
    P_GENERATE_DATE DATE,
    P_RANDOM_VALUE  NUMBER,
    P_ERROR_CD OUT NUMBER,
    P_ERROR_MSG OUT VARCHAR2 )
IS
  V_ERROR_MSG    VARCHAR2(200);
  V_ERROR_CD     NUMBER(10);
  V_RANDOM_VALUE NUMBER(10);
  V_ERR          EXCEPTION;
  V_BAL_DT       DATE:=P_BGN_DATE;
BEGIN


  BEGIN
    SP_RPT_REMOVE_RAND('R_MKBD51_103_STK',P_RANDOM_VALUE,V_ERROR_MSG,V_ERROR_CD);
  EXCEPTION
  WHEN OTHERS THEN
    V_ERROR_CD  := -10;
    V_ERROR_MSG := SUBSTR('SP_RPT_REMOVE_RAND '||V_ERROR_MSG||SQLERRM(SQLCODE),1,200);
    RAISE V_err;
  END;

  BEGIN
    INSERT
    INTO R_MKBD51_103_STK
      (
        REP_DATE, CLIENT_NAME, SID, CLIENT_CD, STK_CD, CLOSE_PRICE, QTY, VALUE, RAND_VALUE, USER_ID, GENERATE_DATE
      )
    SELECT P_END_DATE,M.CLIENT_NAME,M.SID,T.CLIENT_CD,T.STK_CD,C.STK_CLOS CLOSE_PRICE,T.TOTAL QTY, C.STK_CLOS*T.TOTAL VALUE, P_RANDOM_VALUE, P_USER_ID,P_GENERATE_DATE
    FROM
      (
        SELECT CLIENT_CD,STK_CD,SUM(BEG_ON_HAND)TOTAL
        FROM
          (
            SELECT CLIENT_CD, NVL(C.STK_CD_NEW,STK_CD)STK_CD, BEG_ON_HAND
            FROM T_STKBAL, (
                SELECT STK_CD_NEW,STK_CD_OLD FROM T_CHANGE_STK_CD WHERE EFF_DT<=P_END_DATE
              )
              C
            WHERE BAL_DT = V_BAL_DT
            AND NVL(C.STK_CD_NEW,STK_CD) BETWEEN P_BGN_STOCK AND P_END_STOCK
            AND STK_CD       =C.STK_CD_OLD(+)
            AND CLIENT_CD   >= P_BGN_CLIENT
            AND CLIENT_CD   <= P_END_CLIENT
            AND (BEG_BAL_QTY > 0
            OR BEG_ON_HAND   > 0)
            UNION ALL
            SELECT CLIENT_CD, NVL(C.STK_CD_NEW,STK_CD)STK_CD, DECODE(DB_CR_FLG,'D',1,-1) * DECODE(NVL(TRIM(GL_ACCT_CD),'36'),'36',-1,1) * (TOTAL_SHARE_QTY + WITHDRAWN_SHARE_QTY) L_QTY
            FROM T_STK_MOVEMENT, (
                SELECT STK_CD_NEW,STK_CD_OLD FROM T_CHANGE_STK_CD WHERE EFF_DT<=P_END_DATE
              )
              C
            WHERE DOC_DT BETWEEN V_BAL_DT AND P_END_DATE
            AND STK_CD=C.STK_CD_OLD(+)
            AND NVL(C.STK_CD_NEW,STK_CD) BETWEEN P_BGN_STOCK AND P_END_STOCK
            AND CLIENT_CD                 >= P_BGN_CLIENT
            AND CLIENT_CD                 <= P_END_CLIENT
            AND SUBSTR(DOC_NUM,5,2)       IN ('LS','XS','JV','JX','RS','WS','CS')
            AND NVL(TRIM(GL_ACCT_CD),'36') = '36'
            AND DOC_STAT                   = '2'
          )
        GROUP BY CLIENT_CD,STK_CD
      )
      T, T_CLOSE_PRICE C, MST_CLIENT M, (SELECT SL_ACCT FROM TMP_CLIENT_MKBD51_103 WHERE RAND_VALUE=P_RANDOM_VALUE AND USER_ID=P_USER_ID) L
    WHERE STK_DATE     =P_END_DATE
    AND C.APPROVED_STAT='A'
    AND T.STK_CD       =C.STK_CD
    AND T.CLIENT_CD    = M.CLIENT_CD
    AND T.CLIENT_CD    =M.CLIENT_CD
    AND M.CLIENT_CD    =L.sl_acct
    ORDER BY CLIENT_CD,STK_CD;
  EXCEPTION
  WHEN OTHERS THEN
    V_ERROR_CD  := -50;
    V_ERROR_MSG := SUBSTR('INSERT R_MKBD51_103_STK '||V_ERROR_MSG||SQLERRM(SQLCODE),1,200);
    RAISE V_err;
  END;
  --update R_AR_MKBD51_103
  BEGIN
    UPDATE R_MKBD51_103_AR R
    SET JAMINAN=
      (
        SELECT SUM(VALUE)
        FROM R_MKBD51_103_STK A
        WHERE A.client_cd=R.client_cd
        AND a.qty        >0
        GROUP BY client_cd
      )
    WHERE EXISTS
      (
        SELECT client_cd,SUM(value)total
        FROM R_MKBD51_103_STK a
        WHERE A.client_cd=R.client_cd
        AND a.qty        >0
        GROUP BY client_cd
      );
  EXCEPTION
  WHEN OTHERS THEN
    V_ERROR_CD  := -55;
    V_ERROR_MSG := SUBSTR('update R_MKBD51_103_AR KOLOM JAMINAN '||V_ERROR_MSG||SQLERRM(SQLCODE),1,200);
    RAISE V_err;
  END;
  
  P_ERROR_CD     := 1 ;
  P_ERROR_MSG    := '';
EXCEPTION
WHEN V_ERR THEN
  ROLLBACK;
  P_ERROR_MSG := V_ERROR_MSG;
  P_ERROR_CD  := V_ERROR_CD;
WHEN OTHERS THEN
  P_ERROR_CD  := -1 ;
  P_ERROR_MSG := SUBSTR(SQLERRM(SQLCODE),1,200);
  RAISE;
END SPR_MKBD51_103_STK;