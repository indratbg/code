CREATE OR REPLACE PROCEDURE SPR_BANK_MUTATIOON_FAIL(
    P_EFF_DATE      DATE,
    P_USER_ID       VARCHAR2,
    P_GENERATE_DATE DATE,
    P_RANDOM_VALUE OUT NUMBER,
    P_ERROR_CD OUT NUMBER,
    P_ERROR_MSG OUT VARCHAR2 )
IS
  V_ERROR_MSG    VARCHAR2(200);
  V_ERROR_CD     NUMBER(10);
  V_RANDOM_VALUE NUMBER(10);
  V_ERR          EXCEPTION;
BEGIN

  v_random_value := ABS(dbms_random.random);
  
  BEGIN
    SP_RPT_REMOVE_RAND('R_BANK_MUTATION_FAIL',V_RANDOM_VALUE,V_ERROR_MSG, V_ERROR_CD);
  EXCEPTION
  WHEN OTHERS THEN
    V_ERROR_CD  := -10;
    V_ERROR_MSG := SUBSTR('SP_RPT_REMOVE_RAND '||V_ERROR_MSG||SQLERRM(SQLCODE), 1,200);
    RAISE V_err;
  END;
  
  IF V_ERROR_CD  <0 THEN
    V_ERROR_CD  := -20;
    V_ERROR_MSG := SUBSTR('SP_RPT_REMOVE_RAND'||V_ERROR_MSG,1,200);
    RAISE V_ERR;
  END IF;
  
  BEGIN
    INSERT
    INTO R_BANK_MUTATION_FAIL
      (
        RDN ,SID ,SRE ,NAMANASABAH ,TANGGALEFEKTIF ,TANGGALTIMESTAMP ,INSTRUCTIONFROM ,
        COUNTERPARTACCOUNT ,TYPEMUTASI ,TRANSACTIONTYPE ,CURRENCY ,BEGINNINGBALANCE ,TRANSACTIONVALUE ,
        CLOSINGBALANCE ,REMARK ,BANKREFERENCE ,BANKID ,KETERANGAN ,EFF_DATE,RAND_VALUE ,USER_ID ,GENERATE_DATE
      )
    SELECT RDN, SID, SRE, NAMANASABAH, TANGGALEFEKTIF, TANGGALTIMESTAMP, INSTRUCTIONFROM, 
    COUNTERPARTACCOUNT, TYPEMUTASI, TRANSACTIONTYPE, CURRENCY, BEGINNINGBALANCE, TRANSACTIONVALUE,
    CLOSINGBALANCE,REMARK, BANKREFERENCE, BANKID, DECODE(fail_1,'Y','RDI Invalid',NULL)
      ||DECODE(fail_2,'Y',DECODE(fail_3,'Y',DECODE(fail_4,'Y',DECODE(fail_5,'Y',DECODE(fail_6,'Y',','),','),','),','))
      || DECODE(fail_2,'Y',' SID Invalid',NULL)
      ||DECODE(fail_1,'Y',DECODE(fail_3,'Y',DECODE(fail_4,'Y',DECODE(fail_5,'Y',DECODE(fail_6,'Y',','),','),',')))
      || DECODE(fail_3,'Y',' RME Invalid',NULL)
      ||DECODE(fail_2,'Y',DECODE(fail_1,'Y',DECODE(fail_4,'Y',DECODE(fail_5,'Y',DECODE(fail_6,'Y',','),','))))
      || DECODE(fail_4,'Y',' Type Mutation Invalid',NULL)
      ||DECODE(fail_3,'Y',DECODE(fail_2,'Y',DECODE(fail_1,'Y',DECODE(fail_5,'Y',DECODE(fail_6,'Y',',')))))
      || DECODE(fail_5,'Y',' Data Duplicated',NULL)
      ||DECODE(fail_4,'Y',DECODE(fail_3,'Y',DECODE(fail_2,'Y',DECODE(fail_1,'Y',DECODE(fail_6,'Y',',')))))
      || DECODE(fail_6,'Y',' Bank Id Invalid',NULL) KETERANGAN,P_EFF_DATE, V_RANDOM_VALUE, P_USER_ID, P_GENERATE_DATE
    FROM t_bank_mutation_fail
    WHERE tanggalefektif = P_EFF_DATE;
  EXCEPTION
  WHEN OTHERS THEN
    V_ERROR_CD  := -50;
    V_ERROR_MSG := SUBSTR('INSERT R_BANK_MUTATION_FAIL '||V_ERROR_MSG||SQLERRM( SQLCODE),1,200);
    RAISE V_err;
  END;
  
  P_RANDOM_VALUE :=V_RANDOM_VALUE;
  P_ERROR_CD     := 1 ;
  P_ERROR_MSG    := '';
  
EXCEPTION
WHEN V_ERR THEN
  ROLLBACK;
  P_ERROR_MSG := V_ERROR_MSG;
  P_ERROR_CD  := V_ERROR_CD;
WHEN OTHERS THEN
  P_ERROR_CD  := -1 ;
  P_ERROR_MSG := SUBSTR(SQLERRM(SQLCODE),1,200);
  RAISE;
END SPR_BANK_MUTATIOON_FAIL;