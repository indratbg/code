create or replace PROCEDURE SPR_GENERATE_OTC_FEE(
    P_BGN_DT            DATE,
    P_END_DT            DATE,
    P_OTC_FEE           NUMBER,
    P_GL_OTC_CLIENT     VARCHAR2,
    P_SL_OTC_CLIENT     VARCHAR2,
    P_GL_OTC_CLIENT_NON VARCHAR2,
    P_SL_OTC_CLIENT_NON VARCHAR2,
    P_GL_OTC_REPO       VARCHAR2,
    P_SL_OTC_REPO       VARCHAR2,
    P_GL_BIAYA_YMH      VARCHAR2,
    P_SL_BIAYA_YMH      VARCHAR2,
    VP_USERID           VARCHAR2,
    VP_GENERATE_DATE    DATE,
    VO_RANDOM_VALUE OUT NUMBER,
    VO_ERRCD OUT NUMBER,
    VO_ERRMSG OUT VARCHAR2 )
IS
--06DEC2017 [INDRA] TAMBAH SYS PARAM
--23NOV2017[INDRA], JURNAL YANG NONCHARGEABLE KARENA BIAYA OTC SUDAH DIJURNAL HARIAN
  VL_RANDOM_VALUE NUMBER(10);
  VL_ERR          EXCEPTION;
  V_START_DATE DATE;
BEGIN

--06DEC2017 [INDRA]
BEGIN
  SELECT DDATE1 INTO V_START_DATE FROM MST_SYS_PARAM WHERE PARAM_ID = 'OTC_JOURNAL' AND PARAM_CD1='DAILY' AND PARAM_CD2='START';
  EXCEPTION
  WHEN OTHERS THEN
    VO_ERRCD  := -200;
    VO_ERRMSG := SUBSTR('SELECT START DATE FROM MST_SYS_PARAM '||SQLERRM,1,200);
    RAISE VL_ERR;
  END;

  VL_RANDOM_VALUE := ABS(DBMS_RANDOM.RANDOM);
  BEGIN
    SP_RPT_REMOVE_RAND('R_GENERATE_OTC_FEE',VL_RANDOM_VALUE,VO_ERRCD,VO_ERRMSG);
  EXCEPTION
  WHEN OTHERS THEN
    VO_ERRCD  := -2;
    VO_ERRMSG := SQLERRM(SQLCODE);
    RAISE VL_ERR;
  END;

  
      
   BEGIN   
      INSERT    INTO R_GENERATE_OTC_FEE
      (
        CLIENT_CD, CLIENT_NAME,SUM_OTC_CLIENT,SUM_OTC_REPO_JUAL, SUM_OTC_REPO_BELI,JUR,CLOSED,RAND_VALUE,USER_ID,GENERATE_DATE, 
        GL_OTC_CLIENT,SL_OTC_CLIENT,GL_OTC_CLIENT_NON,SL_OTC_CLIENT_NON, GL_OTC_REPO,SL_OTC_REPO,GL_BIAYA_YMH,SL_BIAYA_YMH
      )
        SELECT    CLIENT_CD, CLIENT_NAME, OTC_CLIENT,
        0 SUM_OTC_REPO_JUAL, 0 SUM_OTC_REPO_BELI, 'N' JUR, null CLOSED ,
         VL_RANDOM_VALUE, VP_USERID, VP_GENERATE_DATE, P_GL_OTC_CLIENT,P_SL_OTC_CLIENT,P_GL_OTC_CLIENT_NON, P_SL_OTC_CLIENT_NON,
              P_GL_OTC_REPO, P_SL_OTC_REPO, P_GL_BIAYA_YMH, P_SL_BIAYA_YMH
        from(
            select client_cd,CLIENT_NAME,sum( decode(net_qty , 0,0, P_OTC_FEE)) OTC_CLIENT
            from (
                SELECT A.DOC_DT, A.CLIENT_CD, b.CLIENT_NAME, A.STK_CD, 
                SUM(A.TOTAL_SHARE_QTY - A.WITHDRAWN_SHARE_QTY) AS NET_QTY
                FROM IPNEXTG.T_STK_MOVEMENT A, IPNEXTG.MST_CLIENT B
                WHERE A.SEQNO              = 1
                AND A.CLIENT_CD            = B.CLIENT_CD
                AND SUBSTR(A.DOC_NUM,5,3) IN ('RSN','WSN')
                AND A.DOC_STAT             = '2'
                AND A.DOC_DT BETWEEN P_BGN_DT  AND P_END_DT
                AND A.BROKER IS NOT NULL
                AND B.ACOPEN_FEE_FLG='N' 
                GROUP BY A.DOC_DT, A.CLIENT_CD, A.STK_CD, b.CLIENT_NAME
                  )
           group by client_Cd, CLIENT_NAME
       )
        ORDER BY CLIENT_CD ;
     EXCEPTION
    WHEN OTHERS THEN
      VO_ERRCD  := -20;
      VO_ERRMSG := SUBSTR('INSERT INTO R_GENERATE_OTC_FEE '||SQLERRM,1,200);
      RAISE VL_ERR;
    END;
    
    
  
  VO_RANDOM_VALUE := VL_RANDOM_VALUE;
  VO_ERRCD        := 1;
  VO_ERRMSG       := '';
  
  COMMIT;
EXCEPTION
WHEN VL_ERR THEN
  ROLLBACK;
  VO_RANDOM_VALUE := 0;
  VO_ERRMSG       := SUBSTR(VO_ERRMSG,1,200);
WHEN OTHERS THEN
  ROLLBACK;
  VO_RANDOM_VALUE := 0;
  VO_ERRCD        := -1;
  VO_ERRMSG       := SUBSTR(SQLERRM(SQLCODE),1,200);
END SPR_GENERATE_OTC_FEE;