CREATE OR REPLACE PROCEDURE SPR_TRANSFER_TO_004_AT_002(
    P_TRX_DATE      DATE,
    P_DUE_DATE      DATE,
    P_PRICE_DATE    DATE,
    P_USER_ID       VARCHAR2,
    P_GENERATE_DATE DATE,
    P_RANDOM_VALUE OUT NUMBER,
    P_ERROR_CD OUT NUMBER,
    P_ERROR_MSG OUT VARCHAR2 )
AS
  V_ERR          EXCEPTION;
  V_ERROR_CD     NUMBER(5);
  V_ERROR_MSG    VARCHAR2(200);
  V_RANDOM_VALUE NUMBER(10);
BEGIN

  V_RANDOM_VALUE := ABS(DBMS_RANDOM.RANDOM);
  
  BEGIN
    SP_RPT_REMOVE_RAND('R_TRANSFER_TO_004_AT_002',V_RANDOM_VALUE,V_ERROR_MSG,V_ERROR_CD);
  EXCEPTION
  WHEN OTHERS THEN
    V_ERROR_CD  := -10;
    V_ERROR_MSG := SUBSTR('SP_RPT_REMOVE_RAND '||V_ERROR_MSG||SQLERRM(SQLCODE),1,200);
    RAISE V_ERR;
  END;
  
  BEGIN
    INSERT
    INTO R_TRANSFER_TO_004_AT_002
      (
        STK_CD ,BAL_QTY ,STK_VAL ,CLIENT_CD ,CLIENT_NAME ,SUBREK14 ,RAND_VALUE ,USER_ID ,GENERATE_DATE
      )
    SELECT T.STK_CD, BAL_QTY, BAL_QTY * PRICE AS STK_VAL, T.CLIENT_CD, M.CLIENT_NAME, V.SUBREK14, V_RANDOM_VALUE, P_USER_ID, P_GENERATE_DATE
    FROM
      (
        SELECT A.CLIENT_CD, STK_CD, SUM( DECODE(SUBSTR(CONTR_NUM,5,1),'J',1,-1) * QTY) BAL_QTY
        FROM T_CONTRACTS A, MST_CLIENT B
        WHERE CONTR_DT BETWEEN P_TRX_DATE AND P_DUE_DATE
        AND A.CLIENT_CD     = B.CLIENT_CD
        AND B.CUSTODIAN_CD IS NULL
        AND CONTR_STAT      = '0'
        AND MRKT_TYPE       = 'RG'
        AND SETT_QTY        =0
        AND DUE_DT_FOR_AMT  = P_DUE_DATE
        GROUP BY DUE_DT_FOR_AMT,A.CLIENT_CD, STK_CD
        HAVING SUM( DECODE(SUBSTR(CONTR_NUM,5,1),'J',1,-1) * QTY) > 0
      )
      T, (
        SELECT STK_CD, NVL(STK_CLOS, STK_PREV) PRICE
        FROM T_CLOSE_PRICE
        WHERE STK_DATE = P_PRICE_DATE
      )
      P, MST_CLIENT M, V_CLIENT_SUBREK14 V
    WHERE T.STK_CD  = P.STK_CD
    AND T.CLIENT_CD = M.CLIENT_CD
    AND T.CLIENT_CD = V.CLIENT_CD ;
    --ORDER BY T.STK_CD, CLIENT_CD
  EXCEPTION
  WHEN OTHERS THEN
    V_ERROR_CD  := -50;
    V_ERROR_MSG := SUBSTR('INSERT INTO R_TRANSFER_TO_004_AT_002 '||SQLERRM(SQLCODE),1,200);
    RAISE V_ERR;
  END;
  
  P_RANDOM_VALUE := V_RANDOM_VALUE;
  P_ERROR_CD     := 1 ;
  P_ERROR_MSG    := '';
  
EXCEPTION
WHEN V_ERR THEN
  ROLLBACK;
  P_ERROR_MSG := V_ERROR_MSG;
  P_ERROR_CD  := V_ERROR_CD;
WHEN OTHERS THEN
  P_ERROR_CD  := -1 ;
  P_ERROR_MSG := SUBSTR(SQLERRM(SQLCODE),1,200);
  RAISE;
END SPR_TRANSFER_TO_004_AT_002;