create or replace PROCEDURE SPR_TRX_NASABAH_PER_KATEGORI(
    P_TAHUN number,
    P_USER_ID VARCHAR2,
    P_GENERATE_DATE DATE,
    P_RANDOM_VALUE OUT NUMBER,
    P_ERROR_CD OUT NUMBER,
    P_ERROR_MSG OUT VARCHAR2)

IS

V_ERROR_MSG VARCHAR2(200);
V_ERROR_CD NUMBER(10);
V_RANDOM_VALUE NUMBER(10);
V_ERR EXCEPTION;
V_BGN_DATE DATE;
V_END_DATE DATE;
BEGIN

v_random_value:= ABS(dbms_random.random);

BEGIN
SP_RPT_REMOVE_RAND('R_TRX_NSB_PER_KATEGORI', V_RANDOM_VALUE, V_ERROR_MSG, V_ERROR_CD);
EXCEPTION
WHEN OTHERS THEN
    V_ERROR_CD := -10;
    V_ERROR_MSG:= SUBSTR('SP_RPT_REMOVE_RAND ' || V_ERROR_MSG || SQLERRM(SQLCODE), 1, 200);
    RAISE V_err;
END;

IF V_ERROR_CD < 0 THEN
    V_ERROR_CD:= -20;
    V_ERROR_MSG:= SUBSTR('SP_RPT_REMOVE_RAND' || V_ERROR_MSG, 1, 200);
    RAISE V_ERR;
END IF;

/*

BEGIN
INSERT INTO R_TRX_NSB_PER_KATEGORI(
    TAHUN,
    SEMESTER,
    GRP_1,
    GRP_2,
    NO_URUT,
    KATEGORI,
    JML_NASABAH,
    PERD_SAHAM,
    PERD_OBLIGASI_KORP,
    PERD_SBN,
    PERD_DLL,
    SEKU_SAHAM,
    SEKU_OBLIGASI_KORP,
    SEKU_SBN,
    SEKU_DLL,
    RAND_VALUE,
    USER_ID,
    GENERATE_DATE)
EXCEPTION
WHEN OTHERS THEN
    V_ERROR_CD: = -30;
    V_ERROR_MSG: = SUBSTR('INSERT R_TRX_NSB_PER_KATEGORI ' || V_ERROR_MSG || SQLERRM(SQLCODE), 1, 200);
    RAISE V_err;
END;
*/

P_RANDOM_VALUE:= V_RANDOM_VALUE;
P_ERROR_CD:= 1;
P_ERROR_MSG:= '';

EXCEPTION
WHEN V_ERR THEN
    ROLLBACK;
    P_ERROR_MSG:= V_ERROR_MSG;
    P_ERROR_CD:= V_ERROR_CD;
WHEN OTHERS THEN
    P_ERROR_CD:= -1;
    P_ERROR_MSG:= SUBSTR(SQLERRM(SQLCODE), 1, 200);
    RAISE;
END SPR_TRX_NASABAH_PER_KATEGORI;