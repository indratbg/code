create or replace PROCEDURE SP_LAP_TRX_HARIAN(
    P_TRX_DATE     DATE,
    P_USER_ID      VARCHAR2,
    P_IP_ADDRESS   VARCHAR2,
    P_ERROR_CD OUT NUMBER,
    P_ERROR_MSG OUT VARCHAR2 )
IS
  v_client_cd  VARCHAR2(20);
  V_ERR        EXCEPTION;
  V_ERROR_CODE NUMBER(2);
  V_ERROR_MSG  VARCHAR2(200);
  V_MENU_NAME T_MANY_HEADER.MENU_NAME%TYPE:='LAPORAN TRX HARIAN';
  V_UPDATE_DATE T_MANY_HEADER.UPDATE_DATE%TYPE;
  V_UPDATE_SEQ T_MANY_HEADER.UPDATE_SEQ%TYPE;
  V_CNT NUMBER;
  CURSOR csr_lap(a_client_cd VARCHAR2)
  IS
    SELECT P_TRX_DATE TRX_DT, GRP, SEQNO, DESCRIP, NVL(BELI,0) beli, NVL(JUAL,0) jual
    FROM
      (
        SELECT 1 grp, 1 SEQNO, 'PORTOFOLIO' AS DESCRIP, SUM(DECODE(SUBSTR(CONTR_NUM,5,1),'B',VAL,0)) BELI,
        SUM(DECODE(SUBSTR(CONTR_NUM,5,1),'J',VAL,0)) JUAL
        FROM T_CONTRACTS
        WHERE CONTR_DT               = P_TRX_DATE
        AND CONTR_STAT              <> 'C'
        AND SUBSTR(CONTR_NUM,6,1)    = 'R'
        AND (SUBSTR(CLIENT_TYPE,1,1) = 'H'
        OR CLIENT_CD                 = a_client_cd)
      UNION
      SELECT 1 grp, 2 SEQNO, 'NASABAH', SUM(DECODE(SUBSTR(CONTR_NUM,5,1),'B',VAL,0)) BELI,
      SUM(DECODE(SUBSTR(CONTR_NUM,5,1),'J',VAL,0)) JUAL
      FROM T_CONTRACTS
      WHERE CONTR_DT                = P_TRX_DATE
      AND CONTR_STAT               <> 'C'
      AND SUBSTR(CONTR_NUM,6,1)     = 'R'
      AND (SUBSTR(CLIENT_TYPE,1,1) <> 'H'
      AND CLIENT_CD                <> a_client_cd)
      UNION
      SELECT 2 grp, 3 SEQNO, 'REGULAR', SUM(DECODE(SUBSTR(CONTR_NUM,5,1),'B',VAL,0)) BELI,
      SUM(DECODE(SUBSTR(CONTR_NUM,5,1),'J',VAL,0)) JUAL
      FROM T_CONTRACTS
      WHERE CONTR_DT                = P_TRX_DATE
      AND CONTR_STAT               <> 'C'
      AND SUBSTR(CONTR_NUM,6,1)     = 'R'
      AND SUBSTR(CLIENT_CD,8,1)    IN ( 'R','T')
      AND (SUBSTR(CLIENT_TYPE,1,1) <> 'H'
      AND CLIENT_CD                <> a_client_cd)
      UNION
      SELECT 2 grp, 4 SEQNO, 'MARGIN', SUM(DECODE(SUBSTR(CONTR_NUM,5,1),'B',VAL,0)) BELI,
      SUM(DECODE(SUBSTR(CONTR_NUM,5,1),'J',VAL,0)) JUAL
      FROM T_CONTRACTS
      WHERE CONTR_DT                = P_TRX_DATE
      AND CONTR_STAT               <> 'C'
      AND SUBSTR(CONTR_NUM,6,1)     = 'R'
      AND SUBSTR(CLIENT_CD,8,1)     = 'M'
      AND (SUBSTR(CLIENT_TYPE,1,1) <> 'H'
      AND CLIENT_CD                <> a_client_cd)
      UNION
      SELECT 2 grp, 5 SEQNO, 'SHORT', SUM(DECODE(SUBSTR(CONTR_NUM,5,1),'B',VAL,0)) BELI, 
      SUM(DECODE(SUBSTR(CONTR_NUM,5,1),'J',VAL,0)) JUAL
      FROM T_CONTRACTS
      WHERE CONTR_DT                = P_TRX_DATE
      AND CONTR_STAT               <> 'C'
      AND SUBSTR(CONTR_NUM,6,1)     = 'R'
      AND SUBSTR(CLIENT_CD,8,1)     = 'S'
      AND (SUBSTR(CLIENT_TYPE,1,1) <> 'H'
      AND CLIENT_CD                <> a_client_cd)
      UNION
      SELECT 3 grp, 6 SEQNO, 'LOKAL', SUM(DECODE(SUBSTR(CONTR_NUM,5,1),'B',VAL,0)) BELI, 
      SUM(DECODE(SUBSTR(CONTR_NUM,5,1),'J',VAL,0)) JUAL
      FROM T_CONTRACTS
      WHERE CONTR_DT                = P_TRX_DATE
      AND CONTR_STAT               <> 'C'
      AND SUBSTR(CONTR_NUM,6,1)     = 'R'
      AND SUBSTR(CLIENT_TYPE,2,1)   = 'L'
      AND (SUBSTR(CLIENT_TYPE,1,1) <> 'H'
      AND CLIENT_CD                <> a_client_cd)
      UNION
      SELECT 3 grp, 7 SEQNO, 'ASING', SUM(DECODE(SUBSTR(CONTR_NUM,5,1),'B',VAL,0)) BELI,
      SUM(DECODE(SUBSTR(CONTR_NUM,5,1),'J',VAL,0)) JUAL
      FROM T_CONTRACTS
      WHERE CONTR_DT                = P_TRX_DATE
      AND CONTR_STAT               <> 'C'
      AND SUBSTR(CONTR_NUM,6,1)     = 'R'
      AND SUBSTR(CLIENT_TYPE,2,1)   = 'F'
      AND (SUBSTR(CLIENT_TYPE,1,1) <> 'H'
      AND CLIENT_CD                <> a_client_cd)
      ) ;
  BEGIN

  
  BEGIN
  SELECT COUNT(1) INTO V_CNT FROM LAP_TRX_HARIAN WHERE TRX_DT=P_TRX_DATE AND APPROVED_STS='A';
  EXCEPTION
    WHEN OTHERS THEN
      V_ERROR_CODE := -12;
      V_ERROR_MSG  := SUBSTR('CHECK  LAP_TRX_HARIAN TRX DT '||P_TRX_DATE||' '|| SQLERRM(SQLCODE),1,200);
      RAISE V_ERR;
    END;
    
    IF V_CNT>0 THEN
      
      BEGIN
      DELETE FROM LAP_TRX_HARIAN WHERE TRX_DT=P_TRX_DATE;
      EXCEPTION
      WHEN OTHERS THEN
        V_ERROR_CODE := -50;
        V_ERROR_MSG  := SUBSTR('DELETE  LAP_TRX_HARIAN'||P_TRX_DATE||' '|| SQLERRM(SQLCODE),1,200);
        RAISE V_ERR;
      END;
      
    END IF;  
  
    --EXECUTE SP HEADER
    BEGIN
      Sp_T_Many_Header_Insert(V_MENU_NAME, 'I', P_USER_ID, P_IP_ADDRESS, NULL, V_UPDATE_DATE, V_UPDATE_SEQ, V_ERROR_CODE, V_ERROR_MSG);
    EXCEPTION
    WHEN OTHERS THEN
      V_ERROR_CODE := -50;
      V_ERROR_MSG  := SUBSTR('SP_T_MANY_HEADER_INSERT '|| SQLERRM(SQLCODE),1,200);
      RAISE V_ERR;
    END;
    
    --LOG KE T MANY
    BEGIN
      SP_LAP_TRX_HARIAN_UPD( V_UPDATE_DATE, V_UPDATE_SEQ, P_TRX_DATE, 'I', --P_UPD_STATUS
      P_IP_ADDRESS, V_ERROR_CODE, V_ERROR_MSG );
    EXCEPTION
    WHEN OTHERS THEN
      V_ERROR_CODE := -50;
      V_ERROR_MSG  := SUBSTR('CALL SP_LAP_TRX_HARIAN_UPD '|| SQLERRM(SQLCODE),1,200);
      RAISE V_ERR;
    END;
    
    --get client_cd
    BEGIN
      SELECT trim(other_1) INTO v_client_cd FROM IPNEXTG.mst_company;
    EXCEPTION
    WHEN OTHERS THEN
      V_ERROR_CODE := -3;
      V_ERROR_MSG  := SQLERRM(SQLCODE);
      RAISE V_ERR;
    END;
    
    FOR rec IN CSR_LAP(v_client_cd)
    LOOP
      --insert LAP_TRX_HARIAN
      BEGIN
        INSERT
        INTO LAP_TRX_HARIAN
          (
            UPDATE_DATE,UPDATE_SEQ,TRX_DT,GRP,SEQNO, DESCRIP,BELI, JUAL, USER_ID,APPROVED_STS
          )
          VALUES
          (
            V_UPDATE_DATE,V_UPDATE_SEQ,REC.TRX_DT,REC.GRP,REC.SEQNO, REC.DESCRIP,REC.BELI, REC.JUAL, P_USER_ID, 'E'
          );
      EXCEPTION
      WHEN OTHERS THEN
        V_ERROR_CODE := -4;
        V_ERROR_MSG  := SQLERRM(SQLCODE);
        RAISE V_ERR;
      END;
    END LOOP;
    
    COMMIT;
    P_ERROR_CD := 1;
    P_ERROR_MSG  :='';
  EXCEPTION
  WHEN V_ERR THEN
    ROLLBACK;
    P_ERROR_CD  := V_ERROR_CODE;
    P_ERROR_MSG := SUBSTR(V_ERROR_MSG,1,200);
  WHEN OTHERS THEN
    ROLLBACK;
    -- Consider logging the error and then re-raise
    RAISE;
  END SP_LAP_TRX_HARIAN;