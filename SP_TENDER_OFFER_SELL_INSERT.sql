create or replace PROCEDURE SP_TENDER_OFFER_SELL_INSERT(
    P_RAND_VALUE NUMBER,
    P_USER_ID    VARCHAR2,
    P_ERROR_CODE OUT NUMBER,
    P_ERROR_MSG OUT VARCHAR2)
IS
  V_ERROR_CODE NUMBER(5);
  V_ERROR_MSG  VARCHAR2(200);
  V_ERR        EXCEPTION;
  V_CNT        NUMBER;
  --cre dt ambil dari t_stk_movement : spy urutan di report realised, TENDER OFFER sebelum Withdrawnya
  CURSOR CSR_DATA
  IS
    SELECT JUR_TYPE, STK_CD,DOC_DT, CLIENT_CD,WITHDRAWN_SHARE_QTY, PRICE, GROSS, FEE_PERC, FEE_AMT,NET_AMT,PAYMENT_DATE, ROUNDING,ROUND_POINT,
    mvmt_cre_dt
    FROM INSISTPRO_RPT.R_TENDER_OFFER
    WHERE RAND_VALUE=P_RAND_VALUE
    AND USER_ID     =P_USER_ID;
  V_SEQ NUMBER;
BEGIN
  V_SEQ:=0;
  FOR REC IN CSR_DATA
  LOOP

    IF V_SEQ=0 THEN
    
       BEGIN
        SELECT COUNT(1)
        INTO V_CNT
        FROM T_TENDER_OFFER_SELL
        WHERE CA_TYPE=REC.JUR_TYPE
        AND STK_CD   =REC.STK_CD
        AND TRX_DT   =REC.DOC_DT
        AND RVPV_NUMBER IS NOT NULL;
      EXCEPTION
      WHEN OTHERS THEN
        V_ERROR_CODE := -25;
        V_ERROR_MSG  := SUBSTR('CEK APAKAH SUDAH DIBUAT VOUCHER '||REC.STK_CD||' '||SQLERRM(SQLCODE),1,200);
        RAISE V_ERR;
      END;
      IF V_CNT>0 THEN
          V_ERROR_CODE := -27;
          V_ERROR_MSG  :=REC.STK_CD||' sudah dibuat voucher';
          RAISE V_ERR;
      END IF;
    
      BEGIN
        SELECT COUNT(1)
        INTO V_CNT
        FROM T_TENDER_OFFER_SELL
        WHERE CA_TYPE=REC.JUR_TYPE
        AND STK_CD   =REC.STK_CD
        AND TRX_DT   =REC.DOC_DT
        AND RVPV_NUMBER IS NULL;
      EXCEPTION
      WHEN OTHERS THEN
        V_ERROR_CODE := -30;
        V_ERROR_MSG  := SUBSTR('SELECT T_TENDER_OFFER_SELL '||REC.STK_CD||' '||SQLERRM(SQLCODE),1,200);
        RAISE V_ERR;
      END;
      
      IF V_CNT>0 THEN
        BEGIN
          DELETE
          FROM T_TENDER_OFFER_SELL
          WHERE CA_TYPE=REC.JUR_TYPE
          AND STK_CD   =REC.STK_CD
          AND TRX_DT   =REC.DOC_DT;
        EXCEPTION
        WHEN OTHERS THEN
          V_ERROR_CODE := -30;
          V_ERROR_MSG  := SUBSTR('DELETE T_TENDER_OFFER_SELL '||REC.STK_CD||' '||SQLERRM(SQLCODE),1,200);
          RAISE V_ERR;
        END;
      END IF;
    END IF;--END CHECK TOFFSELL
    
    
    BEGIN
      INSERT
      INTO T_TENDER_OFFER_SELL
        (
          CA_TYPE, STK_CD, TRX_DT, CLIENT_CD, QTY, PRICE, GROSS_AMT, FEE_PCN, FEE_AMT, NET_AMT,
           CRE_DT, USER_ID, APPROVED_DT, APPROVED_BY, APPROVED_STAT, PAYMENT_DT, ROUNDING, ROUND_POINT
        )
        VALUES
        (
          REC.JUR_TYPE,REC.STK_CD,REC.DOC_DT,REC.CLIENT_CD,REC.WITHDRAWN_SHARE_QTY,REC.PRICE,REC.GROSS,REC.FEE_PERC,REC.FEE_AMT, REC.NET_AMT,
          rec.mvmt_cre_dt,P_USER_ID,SYSDATE,P_USER_ID,'A',REC.PAYMENT_DATE, REC.ROUNDING,REC.ROUND_POINT
        );
    EXCEPTION
    WHEN OTHERS THEN
      V_ERROR_CODE := -30;
      V_ERROR_MSG  := SUBSTR('INSERT T_TENDER_OFFER_SELL '||SQLERRM(SQLCODE),1,200);
      RAISE V_ERR;
    END;
    V_SEQ :=V_SEQ+1;
  END LOOP;
  COMMIT;
  P_ERROR_CODE :=1;
  P_ERROR_MSG  :='';
EXCEPTION
WHEN V_ERR THEN
  ROLLBACK;
  P_ERROR_CODE :=V_ERROR_CODE;
  P_ERROR_MSG  :=V_ERROR_MSG;
WHEN OTHERS THEN
  ROLLBACK;
  P_ERROR_CODE:=-1;
  P_ERROR_MSG :=SUBSTR(SQLERRM,1,200);
  RAISE;
END SP_TENDER_OFFER_SELL_INSERT;