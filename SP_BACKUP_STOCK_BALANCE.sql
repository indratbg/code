create or replace 
PROCEDURE SP_BACKUP_STOCK_BALANCE(
								P_BAL_DT DATE,
							   VO_MSSG_ERR OUT VARCHAR2,
							   VO_ERR_CD OUT NUMBER) IS


VL_MSSG_ERR VARCHAR2(200);
VL_ERR_CD NUMBER(2);
VL_ERR EXCEPTION;

 BEGIN
 
 
  ----DELETE DARI T_STK_KSEI YANG BAL_DT SAMA DENGAN YANG DIIMPORT
		 BEGIN
		  DELETE FROM T_STK_KSEI where bal_dt=p_bal_dt ;
		 EXCEPTION
		  WHEN OTHERS THEN
			   VL_MSSG_ERR := 'GAGAL DELETE T_STK_KSEI'||SQLERRM;
			   VL_ERR_CD := -5;
			   RAISE VL_ERR;	
		 END;
    

---INSERT KE T_STK_KSEI_HIST BAL_DT<P_BAL_DT-30 
		 BEGIN
		   INSERT INTO T_STK_KSEI_HIST(IMPORT_DT,BAL_DT,SUB_REK,QTY,STK_CD,FREE)
		   SELECT IMPORT_DT, BAL_DT, SUB_REK, QTY, STK_CD,FREE FROM T_STK_KSEI WHERE BAL_DT< P_BAL_DT-30;
		   EXCEPTION
		   WHEN OTHERS THEN
				VL_MSSG_ERR := 'GAGAL INSERT T_STK_KSEI_HIST '||SQLERRM;
				VL_ERR_CD := -10;
				RAISE VL_ERR;
		  END;
 
     ---DELETE DARI T_STK_KSEI BAL_DT<P_BAL_DT-30 
		 BEGIN
		  DELETE FROM T_STK_KSEI where bal_dt<p_bal_dt-30 ;
		 EXCEPTION
		  WHEN OTHERS THEN
			   VL_MSSG_ERR := 'GAGAL DELETE T_STK_KSEI'||SQLERRM;
			   VL_ERR_CD := -15;
			   RAISE VL_ERR;	
		 END;



VO_ERR_CD := 1 ;
VO_MSSG_ERR := '';

 EXCEPTION
  WHEN VL_ERR THEN
        ROLLBACK;
        VO_MSSG_ERR := VL_MSSG_ERR;
			  VO_ERR_CD := VL_ERR_CD;
  WHEN OTHERS THEN
   VO_ERR_CD := -1 ;
   VO_MSSG_ERR := SUBSTR(SQLERRM(SQLCODE),1,200);
   RAISE;
END SP_BACKUP_STOCK_BALANCE;