CREATE OR REPLACE PROCEDURE SP_UPDATE_CLIENT_TYPE_AND_BANK(
	P_ROWID_CLIENT T_MANY_DETAIL.TABLE_ROWID%TYPE,
	P_ROWID_BANK T_MANY_DETAIL.TABLE_ROWID%TYPE,
	P_CLIENT_TYPE_2 MST_CLIENT.P_CLIENT_TYPE_2%TYPE,
	P_CLIENT_TYPE_3 MST_CLIENT.P_CLIENT_TYPE_3%TYPE,
    P_SEARCH_CIFS					MST_CLIENT_BANK.CIFS%TYPE,
	P_SEARCH_BANK_ACCT_NUM			MST_CLIENT_BANK.BANK_ACCT_NUM%TYPE,
	P_CLIENT_CD						MST_CLIENT_BANK.CLIENT_CD%TYPE,
	P_BANK_CD						MST_CLIENT_BANK.BANK_CD%TYPE,
	P_BANK_BRCH_CD					MST_CLIENT_BANK.BANK_BRCH_CD%TYPE,
	P_BANK_ACCT_NUM					MST_CLIENT_BANK.BANK_ACCT_NUM%TYPE,	
	P_ACCT_NAME						MST_CLIENT_BANK.ACCT_NAME%TYPE,
	P_DEFAULT_FLG					MST_CLIENT_BANK.DEFAULT_FLG%TYPE,
	P_CIFS							MST_CLIENT_BANK.CIFS%TYPE,
	P_BANK_BRANCH					MST_CLIENT_BANK.BANK_BRANCH%TYPE,
	P_BANK_ACCT_TYPE				MST_CLIENT_BANK.BANK_ACCT_TYPE%TYPE,
	P_BANK_PHONE_NUM				MST_CLIENT_BANK.BANK_PHONE_NUM%TYPE,
	P_BANK_ACCT_CURRENCY			MST_CLIENT_BANK.BANK_ACCT_CURRENCY%TYPE,
	P_USER_ID						MST_CLIENT_BANK.USER_ID%TYPE,
	P_UPD_DT						MST_CLIENT_BANK.UPD_DT%TYPE,	
	P_UPD_BY						MST_CLIENT_BANK.UPD_BY%TYPE,
	P_UPD_STATUS					T_MANY_DETAIL.UPD_STATUS%TYPE,
	P_IP_ADDRESS					T_MANY_HEADER.IP_ADDRESS%TYPE,
	P_CANCEL_REASON					T_MANY_HEADER.CANCEL_REASON%TYPE,
	P_ERROR_CODE					OUT			NUMBER,
	P_ERROR_MSG						OUT			VARCHAR2
) IS

V_ERR EXCEPTION;
V_ERROR_CODE					NUMBER;
V_ERROR_MSG						VARCHAR2(200);
V_TABLE_ROWID					T_MANY_DETAIL.TABLE_ROWID%TYPE;
V_CLIENT_TYPE_2 MST_CLIENT.CLIENT_TYPE_2%TYPE;
V_CLIENT_TYPE_3 MST_CLIENT.CLIENT_TYPE_3%TYPE;
V_MENU_NAME T_MANY_HEADER.MENU_NAME%TYPE:='UPDATE CLIENT TYPE AND CLIENT BANK';
V_UPDATE_DATE DATE;
V_UPDATE_SEQ T_MANY_HEADER.V_UPDATE_SEQ%TYPE;


CURSOR CSR_TABLE IS
SELECT CLIENT_TYPE_2,CLIENT_TYPE_3
FROM MST_CLIENT
WHERE ROWID = P_ROWID_CLIENT;

BEGIN
	

	BEGIN
	SELECT ROWID,CLIENT_TYPE_2,CLIENT_TYPE_3 INTO V_TABLE_ROWID, V_CLIENT_TYPE_2,V_CLIENT_TYPE_3 FROM MST_CLIENT WHERE ROWID=P_ROWID_CLIENT;
	WHEN OTHERS THEN
		V_ERROR_CODE:=-10;
		V_ERROR_MSG :=SUBSTR('SELECT ROWID ||'SQLERRM,1,200);
		RAISE V_ERR;
	END;


  --EXECUTE SP HEADER
  BEGIN
    SP_T_MANY_HEADER_INSERT(V_MENU_NAME, 'U', P_USER_ID, P_IP_ADDRESS, P_CANCEL_REASON, V_UPDATE_DATE, V_UPDATE_SEQ, V_ERROR_CODE, V_ERROR_MSG);
  EXCEPTION
  WHEN OTHERS THEN
    V_ERROR_CODE := -50;
    V_ERROR_MSG  := SUBSTR('SP_T_MANY_HEADER_INSERT '|| SQLERRM(SQLCODE),1,200);
    RAISE V_ERR;
  END;

	
	IF V_CLIENT_TYPE_2 <> P_CLIENT_TYPE_2 OR V_CLIENT_TYPE_3 <> P_CLIENT_TYPE_3 THEN

		OPEN CSR_TABLE;
		FETCH CSR_TABLE INTO V_REC;
				--OPEN V_MANY_DETAIL FOR	
				SELECT V_UPDATE_DATE AS UPDATE_DATE, V_UPDATE_SEQ AS UPDATE_SEQ, TABLE_NAME, 1 AS RECORD_SEQ, V_TABLE_ROWID AS TABLE_ROWID, A.FIELD_NAME,FIELD_TYPE, B.FIELD_VALUE, 'U' AS STATUS,  B.UPD_FLG
				BULK COLLECT INTO V_TAB
				FROM(
					SELECT 'T_PAYRECD' AS TABLE_NAME, COLUMN_NAME AS FIELD_NAME,
						   DECODE(DATA_TYPE,'VARCHAR2','S','CHAR','S','NUMBER','N','DATE','D','X') AS FIELD_TYPE
					FROM ALL_TAB_COLUMNS
					WHERE TABLE_NAME = 'MST_CLIENT'
					AND OWNER = 'IPNEXTG'
				) A,
				( 	
					SELECT  'CLIENT_TYPE_2'  AS FIELD_NAME, P_CLIENT_TYPE_2 AS FIELD_VALUE, DECODE(V_REC.CLIENT_TYPE_2, P_CLIENT_TYPE_2,'N','Y') UPD_FLG FROM DUAL
					UNION ALL
					SELECT  'CLIENT_TYPE_3'  AS FIELD_NAME, P_CLIENT_TYPE_3 AS FIELD_VALUE,  DECODE(V_REC.CLIENT_TYPE_3, P_CLIENT_TYPE_3,'N','Y') UPD_FLG FROM DUAL
							
				) B
				WHERE A.FIELD_NAME = B.FIELD_NAME;
				
			FORALL I IN V_TAB.FIRST .. V_TAB.LAST
				INSERT INTO T_MANY_DETAIL
				VALUES V_TAB(I);
				
		CLOSE CSR_TABLE;

	END IF;




    P_ERROR_CODE := 1;
	P_ERROR_MSG := '';

EXCEPTION
	WHEN NO_DATA_FOUND THEN
		NULL;
	WHEN V_ERR THEN
		ROLLBACK;
		P_ERROR_CODE := V_ERROR_CODE;
		P_ERROR_MSG := V_ERROR_MSG;
	WHEN OTHERS THEN
   -- CONSIDER LOGGING THE ERROR AND THEN RE-RAISE
		ROLLBACK;
		P_ERROR_CODE := -1;
		P_ERROR_MSG := SUBSTR(SQLERRM(SQLCODE),1,200);
		RAISE;
END SP_UPDATE_CLIENT_TYPE_AND_BANK;