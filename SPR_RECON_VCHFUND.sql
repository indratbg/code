create or replace PROCEDURE SPR_RECON_VCHFUND(
    P_DOC_DATE      DATE,
    P_OPTION VARCHAR2,
    P_USER_ID       VARCHAR2,
    P_GENERATE_DATE DATE,
    P_RANDOM_VALUE OUT NUMBER,
    P_ERROR_CD OUT NUMBER,
    P_ERROR_MSG OUT VARCHAR2 )
AS

  V_ERR          EXCEPTION;
  V_ERROR_CD     NUMBER(5);
  V_ERROR_MSG    VARCHAR2(200);
  V_RANDOM_VALUE NUMBER(10);
  
BEGIN
  v_random_value := ABS(dbms_random.random);
  
  BEGIN
    SP_RPT_REMOVE_RAND('R_RECON_VCHFUND',V_RANDOM_VALUE,V_ERROR_MSG,V_ERROR_CD);
  EXCEPTION
  WHEN OTHERS THEN
    V_ERROR_CD  := -10;
    V_ERROR_MSG := SUBSTR('SP_RPT_REMOVE_RAND '||V_ERROR_MSG||SQLERRM(SQLCODE),1,200);
    RAISE V_err;
  END;
  
  IF V_ERROR_CD  <0 THEN
    V_ERROR_CD  := -20;
    V_ERROR_MSG := SUBSTR('SP_RPT_REMOVE_RAND'||V_ERROR_MSG,1,200);
    RAISE V_ERR;
  END IF;
  
  BEGIN
  INSERT INTO R_RECON_VCHFUND(
    DOC_NUM
,DOC_DATE
,CLIENT_CD
,VCH_AMT
,CASH_AMT
,SELISIH
,USER_ID
,RAND_VALUE
,GENERATE_DATE)
   SELECT A.DOC_NUM, A.DOC_DATE,A.CLIENT_CD,A.TRX_AMT VCH_AMT, NVL(B.CASH_AMT,0)CASH_AMT, (A.TRX_AMT-NVL(B.CASH_AMT,0) )SELISIH,
   P_USER_ID, V_RANDOM_VALUE,P_GENERATE_DATE
FROM
  (
    SELECT A.DOC_REF_NUM2 AS DOC_NUM,A.DOC_DATE,A.CLIENT_CD,A.TRX_AMT
    FROM IPNEXTG.T_FUND_MOVEMENT A, IPNEXTG.T_PAYRECH P
    WHERE TRIM(ACCT_TYPE)='ROR'
    AND A.CLIENT_CD      =P.CLIENT_CD
    AND A.DOC_REF_NUM    =P.PAYREC_NUM
    AND P.PAYREC_DATE    =P_DOC_DATE
    AND A.SOURCE         ='VCHFUND'
    AND A.DOC_DATE       =P_DOC_DATE
    AND A.APPROVED_STS   ='A'
    AND P.APPROVED_STS   ='A'
  )
  A, (
    SELECT TRX_DOC_REF_NUM DOC_NUM,TRX_DATE,SL_CODE,(CURR_DEBIT+CURR_CREDIT)AS CASH_AMT
    FROM IPNEXTG.CASH_TRANSACTION
    WHERE TRX_DATE=P_DOC_DATE
    AND TRX_STATUS='N'
  )
  B
WHERE A.DOC_NUM=B.DOC_NUM(+)
AND ((A.TRX_AMT-NVL(B.CASH_AMT,0) )>0 AND P_OPTION='DIFF' OR P_OPTION='ALL');

  EXCEPTION
  WHEN OTHERS THEN
    V_ERROR_CD  :=-30;
    V_ERROR_MSG := SUBSTR('INSERT INTO R_RECON_VCHFUND '||SQLERRM(SQLCODE),1,200);
    RAISE V_ERR;
  END;
  
  P_RANDOM_VALUE := v_random_value;
  P_ERROR_CD     := 1 ;
  P_ERROR_MSG    := '';
EXCEPTION
WHEN V_ERR THEN
  ROLLBACK;
  P_ERROR_MSG := V_ERROR_MSG;
  P_ERROR_CD  := V_ERROR_CD;
WHEN OTHERS THEN
  P_ERROR_CD  := -1 ;
  P_ERROR_MSG := SUBSTR(SQLERRM(SQLCODE),1,200);
  RAISE;
END SPR_RECON_VCHFUND;