create or replace 
PROCEDURE Bo2fo_Unsuspend_Rekdana_Client
    (
VI_CLIENT_CD	IN MST_CLIENT.Client_cd%TYPE,
VI_susp_flg_org	IN VARCHAR2,
VO_ERRCODE 	OUT NUMBER,
VO_ERRMSG	OUT VARCHAR2
)  IS
--Prosedure untuk suspend nasabah yg belum punya rekening dana
--Dibuat oleh chandra prasasta 31 januari 2012

vl_count	NUMBER(1);
vl_err		EXCEPTION;


BEGIN
	BEGIN
		SELECT COUNT(*)
		INTO vl_count
		FROM LOTS.FOMH_CLIENT_LIMIT@BOFO.LOTS
		WHERE client_cd = VI_CLIENT_CD;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			vl_count := 0;
		WHEN OTHERS THEN
			VO_ERRMSG := SUBSTR(SQLERRM(SQLCODE),1,200);
			VO_ERRCODE := -1;
			RAISE vl_err;
	END;

	BEGIN
		UPDATE rtmh_distributed_fpe@bofo.lots
		SET fpe_userid = SUBSTR(fpe_userid,5,LENGTH(fpe_userid)-4)
		WHERE client_cd = VI_CLIENT_CD
		AND LENGTH(fpe_userid) > 11;

		IF SQL%NOTFOUND THEN
			NULL;
		END IF;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			NULL;
		WHEN OTHERS THEN
			VO_ERRMSG := SUBSTR(SQLERRM(SQLCODE),1,200);
			VO_ERRCODE := -1;
			RAISE vl_err;
	END;

	IF vl_count > 0 THEN
		BEGIN
			UPDATE LOTS.FOMH_CLIENT_LIMIT@BOFO.LOTS
				SET susp_flg = 'N', cre_dt=SYSDATE
				WHERE  client_cd = VI_CLIENT_CD
				AND susp_flg = VI_susp_flg_org;
		EXCEPTION
			WHEN NO_DATA_FOUND THEN
				NULL;
			WHEN OTHERS THEN
				VO_ERRMSG := SUBSTR(SQLERRM(SQLCODE),1,200);
				VO_ERRCODE := -1;
				RAISE vl_err;
		END;
	ELSE
		BEGIN
			INSERT INTO FOMH_CLIENT_LIMIT@bofo.lots  (
			   CLIENT_CD, MARGIN_TYPE, EFF_DT,
			   MATURITY_DT, BASIC_LIMIT, LOAN_MARGIN_PERC,
			   FORCE_SELL_PERC, TOP_LIMIT_PERC, OVERLIMIT_AUTH_FLG,
			   SHORTSELL_AUTH_FLG, OS_AMT, BUY_ORD_AMT,
			   SELL_ORD_AMT, CONF_BUY_TRADE_OS, CONF_SELL_TRADE_OS,
			   BO_OS_AMT, DEBIT_AMT, CREDIT_AMT,
			   INTEREST_VAL, DUE_VAL, SUSP_FLG,
			   CRE_DT)
			SELECT RTRIM(SUBSTR(RTRIM(CLIENT_CD), 1, 9)) CLIENT_CD,
						  RTRIM(CLIENT_TYPE_3) MARGIN_TYPE,
						  SYSDATE EFF_DT,
						  TO_DATE(NULL) MATURITY_DT,
						  TO_NUMBER(0) BASIC_LIMIT,
						  TO_NUMBER(100) LOAN_MARGIN_PERC,
						  TO_NUMBER(0) FORCE_SELL_PERC,
						  TO_NUMBER(0) TOP_LIMIT_PERC,
						  'R' OVERLIMIT_AUTH_FLG,
						  'R' SHORTSELL_AUTH_FLG,
						  TO_NUMBER(0) OS_AMT,
						  TO_NUMBER(0) BUY_ORD_AMT,
						  TO_NUMBER(0) SELL_ORD_AMT,
						  TO_NUMBER(0) CONF_BUY_TRADE_OS,
						  TO_NUMBER(0) CONF_SELL_TRADE_OS,
						  TO_NUMBER(0) BO_OS_AMT,
						  TO_NUMBER(0) DEBIT_AMT,
						  TO_NUMBER(0) CREDIT_AMT,
						  TO_NUMBER(0) INTEREST_VAL,
						  TO_NUMBER(0) DUE_VAL,
						  'N' SUSP_FLG,
						  SYSDATE CRE_DT
					FROM MST_CLIENT
					WHERE Client_cd = VI_CLIENT_CD;
		EXCEPTION
			WHEN OTHERS THEN
				VO_ERRMSG := SUBSTR(SQLERRM(SQLCODE),1,200);
				VO_ERRCODE := -1;
				RAISE vl_err;
		END;
	END IF;

	COMMIT;
	VO_ERRMSG := '';
	VO_ERRCODE := 1;
EXCEPTION
	WHEN vl_err THEN
		ROLLBACK;
		Sp_Insert_Orcl_Errlog('INSISTPRO', 'ORCLBO', 'BO2FO_SUSPEND_REKDANA', VO_ERRMSG);
       WHEN NO_DATA_FOUND THEN
         Sp_Insert_Orcl_Errlog('INSISTPRO', 'ORCLBO', 'BO2FO_SUSPEND_REKDANA', SUBSTR(SQLERRM(SQLCODE),1,200));
       WHEN OTHERS THEN
         Sp_Insert_Orcl_Errlog('INSISTPRO', 'ORCLBO', 'BO2FO_SUSPEND_REKDANA', SUBSTR(SQLERRM(SQLCODE),1,200));
  END Bo2fo_Unsuspend_Rekdana_Client;