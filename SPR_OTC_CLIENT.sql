create or replace PROCEDURE SPR_OTC_CLIENT(
   P_BGN_DT DATE,
   P_END_DT DATE,
   P_CHARGE_FLG VARCHAR2, --% ALL, N = NONCHARGEABLE, Y=CHARGEABLE
    P_USER_ID       VARCHAR2,
    P_GENERATE_DATE DATE,
    P_RANDOM_VALUE OUT NUMBER,
    P_ERROR_CD OUT NUMBER,
    P_ERROR_MSG OUT VARCHAR2 )
IS
  V_ERROR_MSG    VARCHAR2(200);
  V_ERROR_CD     NUMBER(10);
  v_random_value NUMBER(10);
  V_ERR          EXCEPTION;
  P_OTC_FEE NUMBER:=20000;
BEGIN
  
  v_random_value := ABS(dbms_random.random);
  
  BEGIN
    SP_RPT_REMOVE_RAND('R_OTC_CLIENT',V_RANDOM_VALUE,V_ERROR_MSG,V_ERROR_CD);
  EXCEPTION
  WHEN OTHERS THEN
    V_ERROR_CD  := -10;
    V_ERROR_MSG := SUBSTR('SP_RPT_REMOVE_RAND '||V_ERROR_MSG||SQLERRM(SQLCODE),1,200);
    RAISE V_err;
  END;
  
  IF V_ERROR_CD  <0 THEN
    V_ERROR_CD  := -20;
    V_ERROR_MSG := SUBSTR('SP_RPT_REMOVE_RAND'||V_ERROR_MSG,1,200);
    RAISE V_ERR;
  END IF;
  
  BEGIN
    INSERT INTO R_OTC_CLIENT (CLIENT_CD, CLIENT_NAME, ACOPEN_FEE_FLG, OTC_CLIENT, USER_ID, RAND_VALUE, GENERATE_DATE )
       select CLIENT_CD,CLIENT_NAME,ACOPEN_FEE_FLG,SUM( DECODE(NET_QTY , 0,0, P_OTC_FEE)) OTC_CLIENT, P_USER_ID,V_RANDOM_VALUE,P_GENERATE_DATE
            from (
                  select  a.DOC_DT, a.CLIENT_CD, B.CLIENT_NAME, a.STK_CD, ACOPEN_FEE_FLG,
                  sum(a.TOTAL_SHARE_QTY - a.WITHDRAWN_SHARE_QTY) as NET_QTY
                  from IPNEXTG.T_STK_MOVEMENT a, IPNEXTG.MST_CLIENT B
                  where a.SEQNO              = 1
                  and a.CLIENT_CD            = B.CLIENT_CD
                  and SUBSTR(a.DOC_NUM,5,3) in ('RSN','WSN')
                  and a.DOC_STAT             = '2'
                  and a.DOC_DT between P_BGN_DT  and P_END_DT
                  and a.BROKER is not null
                  and ((B.ACOPEN_FEE_FLG=P_CHARGE_FLG)  or P_CHARGE_FLG='%')
                  group by a.DOC_DT, a.CLIENT_CD, a.STK_CD, B.CLIENT_NAME,ACOPEN_FEE_FLG
                  )
           group by CLIENT_CD, CLIENT_NAME,ACOPEN_FEE_FLG;
  EXCEPTION
  WHEN OTHERS THEN
    V_ERROR_CD  := -30;
    V_ERROR_MSG := SUBSTR('INSERT R_OTC_CLIENT '||V_ERROR_MSG||SQLERRM(SQLCODE),1,200);
    RAISE V_err;
  END;
  
  P_RANDOM_VALUE :=V_RANDOM_VALUE;
  P_ERROR_CD     := 1 ;
  P_ERROR_MSG    := '';
  
EXCEPTION
WHEN V_ERR THEN
  ROLLBACK;
  P_ERROR_MSG := V_ERROR_MSG;
  P_ERROR_CD  := V_ERROR_CD;
WHEN OTHERS THEN
  P_ERROR_CD  := -1 ;
  P_ERROR_MSG := SUBSTR(SQLERRM(SQLCODE),1,200);
  RAISE;
END SPR_OTC_CLIENT;