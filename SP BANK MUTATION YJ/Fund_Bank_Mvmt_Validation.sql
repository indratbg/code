CREATE OR REPLACE 
PROCEDURE FUND_BANK_MVMT_VALIDATION  (
VP_KODEAB T_BANK_MUTATION.KODEAB%TYPE,
VP_NAMAAB T_BANK_MUTATION.NAMAAB%TYPE,
VP_RDN T_BANK_MUTATION.RDN%TYPE,
VP_SID T_BANK_MUTATION.SID%TYPE,
VP_SRE T_BANK_MUTATION.SRE%TYPE,
VP_NAMANASABAH T_BANK_MUTATION.NAMANASABAH%TYPE,
VP_TANGGALEFEKTIF T_BANK_MUTATION.TANGGALEFEKTIF%TYPE,
VP_TANGGALTIMESTAMP T_BANK_MUTATION.TANGGALTIMESTAMP%TYPE,
VP_INSTRUCTIONFROM T_BANK_MUTATION.INSTRUCTIONFROM%TYPE,
VP_COUNTERPARTACCOUNT T_BANK_MUTATION.COUNTERPARTACCOUNT%TYPE,
VP_TYPEMUTASI T_BANK_MUTATION.TYPEMUTASI%TYPE,
VP_TRANSACTIONTYPE T_BANK_MUTATION.TRANSACTIONTYPE%TYPE,
VP_CURRENCY T_BANK_MUTATION.CURRENCY%TYPE,
VP_BEGINNINGBALANCE T_BANK_MUTATION.BEGINNINGBALANCE%TYPE,
VP_TRANSACTIONVALUE T_BANK_MUTATION.TRANSACTIONVALUE%TYPE,
VP_CLOSINGBALANCE T_BANK_MUTATION.CLOSINGBALANCE%TYPE,
VP_REMARK T_BANK_MUTATION.REMARK%TYPE,
VP_BANKREFERENCE T_BANK_MUTATION.BANKREFERENCE%TYPE,
VP_BANKID T_BANK_MUTATION.BANKID%TYPE,
VP_IMPORTSEQ T_BANK_MUTATION.IMPORTSEQ%TYPE,
VO_FAIL	  		OUT T_BANK_MUTATION_FAIL.FAIL_1%TYPE,
VO_ERRCD 		OUT NUMBER,
VO_ERRMSG		OUT VARCHAR2
) AS

--30OCT14 - RBH AMBIL SID DR MST CIF
--19APR 13 - JIKA INVALID SID / SUBREK , TETAP MASUK KE T_BANK MUTATION  ,
--          TETAP KELUAR MESSAGE DAN MASUK KE T_BANK MUTATION FAIL

VL_ERR			EXCEPTION;
V_CNT			NUMBER;

V_FAIL_1		T_BANK_MUTATION_FAIL.FAIL_1%TYPE;
V_FAIL_2		T_BANK_MUTATION_FAIL.FAIL_1%TYPE;
V_FAIL_3		T_BANK_MUTATION_FAIL.FAIL_1%TYPE;
V_FAIL_4		T_BANK_MUTATION_FAIL.FAIL_1%TYPE;
V_FAIL_5		T_BANK_MUTATION_FAIL.FAIL_1%TYPE;
V_FAIL_6		T_BANK_MUTATION_FAIL.FAIL_1%TYPE;
V_FAIL_7		T_BANK_MUTATION_FAIL.FAIL_1%TYPE;
V_FAIL_8		T_BANK_MUTATION_FAIL.FAIL_1%TYPE;
V_FAIL_9		T_BANK_MUTATION_FAIL.FAIL_1%TYPE;
V_IMPORTSEQ		T_BANK_MUTATION.IMPORTSEQ%TYPE;

BEGIN

	 VO_FAIL := 'N';
	 V_CNT := 0;
	 BEGIN
	 SELECT COUNT(1) INTO V_CNT
	 FROM MST_CLIENT M, MST_CIF F
	 WHERE F.SID = VP_SID
	 AND F.CIFS = M.CIFS
	 AND SUSP_STAT = 'N';
	 EXCEPTION
	 WHEN NO_DATA_FOUND THEN
	 V_CNT := 0;
	 END;

	 IF V_CNT = 0 THEN
--SID INVALID
	 	V_FAIL_2 := 'Y';
		VO_FAIL := 'I';
		ELSE
		V_FAIL_2 := 'N';
	END IF;

	 V_CNT := 0;
	 BEGIN
	 SELECT COUNT(1) INTO V_CNT
	 FROM V_CLIENT_SUBREK14
	 WHERE SUBREK001 = VP_SRE;
	 EXCEPTION
	 WHEN NO_DATA_FOUND THEN
	 V_CNT := 0;
	 END;

	 IF V_CNT = 0 THEN
--SRE INVALID
	 	V_FAIL_3 := 'Y';
		VO_FAIL := 'I';
		ELSE
		V_FAIL_3 := 'N';
	END IF;


	 V_CNT := 0;
	 BEGIN
	 SELECT COUNT(1) INTO V_CNT
	 FROM MST_CLIENT_FLACCT
	 WHERE BANK_ACCT_NUM = VP_RDN;
	 EXCEPTION
	 WHEN NO_DATA_FOUND THEN
	 V_CNT := 0;
	 END;

	 IF V_CNT = 0 THEN
--RDN INVALID
	 	V_FAIL_1 := 'Y';
		VO_FAIL := 'Y';
		ELSE
		V_FAIL_1 := 'N';
	END IF;


	IF VP_TYPEMUTASI = 'D' OR VP_TYPEMUTASI = 'C' THEN
	    V_FAIL_4 := 'N';
		ELSE
--TYPE_MUTASI INVALID
	   V_FAIL_4 := 'Y';
	   VO_FAIL := 'Y';
	 END IF;


	 V_CNT := 0;
	 BEGIN
	 SELECT COUNT(1) INTO V_CNT
	 FROM MST_FUND_BANK
	 WHERE BANK_CD = VP_BANKID;
	 EXCEPTION
	 WHEN NO_DATA_FOUND THEN
	 V_CNT := 0;
	 END;

	 IF V_CNT = 0 THEN
--BANK_ID INVALID
	 	V_FAIL_6 := 'Y';
		VO_FAIL := 'Y';
		ELSE
		V_FAIL_6 := 'N';
	END IF;


	V_CNT := 0;
	 BEGIN
	 SELECT COUNT(1), MAX(IMPORTSEQ) INTO V_CNT, V_IMPORTSEQ
	 FROM T_BANK_MUTATION
	 WHERE RDN = VP_RDN
	 AND TANGGALEFEKTIF = VP_TANGGALEFEKTIF
	 AND BANKREFERENCE = VP_BANKREFERENCE
	 AND BANKID = VP_BANKID
	 AND TRANSACTIONTYPE = VP_TRANSACTIONTYPE;
	 EXCEPTION
	 WHEN NO_DATA_FOUND THEN
	 V_CNT := 0;
	 END;
--	 AND TRANSACTIONVALUE = VP_TRANSACTIONVALUE


	 IF V_CNT > 0 THEN
	 	IF V_IMPORTSEQ = VP_IMPORTSEQ THEN
--DATA DUPLICATED
	 	--V_DUPL := 'Y';
			V_FAIL_5:= 'Y';
			VO_FAIL := 'Y';
		ELSE
			V_FAIL_5:= 'N';
		END IF;
	 ELSE
		V_FAIL_5:= 'N';
	END IF;


	V_FAIL_7 := 'N';
	V_FAIL_8 := 'N';
	V_FAIL_9 := 'N';

	IF VO_FAIL = 'Y' OR VO_FAIL = 'I' THEN

	   BEGIN
	   SELECT COUNT(1) INTO V_CNT
	   FROM T_BANK_MUTATION_FAIL
	   WHERE RDN = VP_RDN
		 AND TANGGALEFEKTIF = VP_TANGGALEFEKTIF
		 AND BANKREFERENCE = VP_BANKREFERENCE
		 AND BANKID = VP_BANKID
		 AND TRANSACTIONTYPE = VP_TRANSACTIONTYPE
		 AND TRUNC(CRE_DT) = TRUNC(SYSDATE)
		 AND TRANSACTIONVALUE = VP_TRANSACTIONVALUE;
		 EXCEPTION
		 WHEN NO_DATA_FOUND THEN
		 V_CNT := 0;
		 END;

	   IF V_CNT = 0 THEN
	   		BEGIN
			INSERT INTO T_BANK_MUTATION_FAIL
			(KODEAB,
				NAMAAB,
				RDN,--1
				SID,--2
				SRE,--3
				NAMANASABAH,
				TANGGALEFEKTIF,
				TANGGALTIMESTAMP,
				INSTRUCTIONFROM,
				COUNTERPARTACCOUNT,
				TYPEMUTASI,--4  D/C
				TRANSACTIONTYPE,
				CURRENCY,
				BEGINNINGBALANCE,
				TRANSACTIONVALUE,
				CLOSINGBALANCE,
				REMARK,
				BANKREFERENCE,--5 DOBEL
				BANKID,-- 6 MST_FUND BANK
				FAIL_1,
			  FAIL_2,
			  FAIL_3,
			  FAIL_4,
			  FAIL_5,
			  FAIL_6,
			  FAIL_7,
			  FAIL_8,
			  FAIL_9,
			  CRE_DT
			)
			VALUES
			(VP_KODEAB,
				VP_NAMAAB,
				VP_RDN,
				VP_SID,
				VP_SRE,
				VP_NAMANASABAH,
				VP_TANGGALEFEKTIF,
				VP_TANGGALTIMESTAMP,
				VP_INSTRUCTIONFROM,
				VP_COUNTERPARTACCOUNT,
				VP_TYPEMUTASI,
				VP_TRANSACTIONTYPE,
				VP_CURRENCY,
				VP_BEGINNINGBALANCE,
				VP_TRANSACTIONVALUE,
				VP_CLOSINGBALANCE,
				VP_REMARK,
				VP_BANKREFERENCE,
				VP_BANKID,
				V_FAIL_1,
			  V_FAIL_2,
			  V_FAIL_3,
			  V_FAIL_4,
			  V_FAIL_5,
			  V_FAIL_6,
			  V_FAIL_7,
			  V_FAIL_8,
			  V_FAIL_9,
			  SYSDATE
			);
			EXCEPTION
			WHEN OTHERS THEN
				VO_ERRCD := -1;
				VO_ERRMSG := SUBSTR(SQLERRM(SQLCODE),1,100);
				RAISE VL_ERR;
			END;
		END IF;
	END IF;
	VO_ERRCD := 1;
	COMMIT;
EXCEPTION
	WHEN VL_ERR THEN
		ROLLBACK;
END FUND_BANK_MVMT_VALIDATION;