create or replace PROCEDURE SP_SEQ_VCH(
    P_DATE DATE,
    ps_rvpv IN VARCHAR2,
    p_counter OUT NUMBER,
    P_ERROR_CODE OUT NUMBER,
    P_ERROR_MSG OUT VARCHAR2)
IS
  V_SEQ        NUMBER:=0;
  V_STR        VARCHAR2(200);
  V_CNT        NUMBER(1);
  V_SEQ_NAME   VARCHAR2(20);
  V_ERROR_CODE NUMBER;
  V_ERROR_MSG  VARCHAR2(200);
  V_ERR        EXCEPTION;
  V_BGN_SEQ NUMBER;
  vs_doccd      	VARCHAR2(10) := NULL;
BEGIN

  V_SEQ_NAME :='SEQ_VCH_JUR_'||TO_CHAR(P_DATE,'MMYY')||'_'||ps_rvpv;
  vs_doccd := trim(TO_CHAR(P_DATE,'mmyy')||ps_rvpv);
  BEGIN 
   SELECT COUNT(1) INTO V_CNT FROM ALL_SEQUENCES WHERE SEQUENCE_NAME=V_SEQ_NAME;
   EXCEPTION
  WHEN OTHERS THEN
  V_ERROR_CODE :=-20;
  V_ERROR_MSG :=SUBSTR('CHECK SEQUENCE '||V_SEQ_NAME||'IN ALL_SEQUENCES'||SQLERRM,1,200);
  RAISE V_ERR;
  END;
  
  IF V_CNT =0 THEN
  
  BEGIN
      SELECT NVL(MAX(TO_NUMBER(SUBSTR(PAYREC_NUM,8,7))),0)+1 INTO V_BGN_SEQ 
      FROM 
      (
        SELECT payrec_num
        FROM T_PAYRECH a
        WHERE PAYREC_NUM LIKE vs_doccd||'%'
        UNION
        SELECT field_value
        FROM T_MANY_DETAIL a JOIN T_MANY_HEADER b
        ON a.UPDATE_DATE = b.UPDATE_DATE
        AND a.UPDATE_SEQ = b.UPDATE_SEQ
        WHERE b.UPDATE_DATE>=TRUNC(SYSDATE)
        AND TABLE_NAME = 'T_PAYRECH'
        AND FIELD_NAME = 'PAYREC_NUM'
        AND FIELD_VALUE LIKE vs_doccd||'%'
        AND APPROVED_STATUS = 'E'
      );
    EXCEPTION
      WHEN OTHERS THEN
        V_ERROR_CODE :=-30;
        V_ERROR_MSG  :=SUBSTR('GET MAX COUNTER '||SQLERRM,1,200);
        RAISE V_ERR;
    END;
  
    BEGIN
      V_STR :='CREATE SEQUENCE '||V_SEQ_NAME||' MINVALUE 0 MAXVALUE 9999999 INCREMENT BY 1 START WITH '||V_BGN_SEQ;
      EXECUTE IMMEDIATE V_STR;
    EXCEPTION
    WHEN OTHERS THEN
      V_ERROR_CODE :=-30;
      V_ERROR_MSG  :=SUBSTR('CREATE SEQUENCE '||V_SEQ_NAME||SQLERRM,1,200);
      RAISE V_ERR;
    END;
    
  END IF;
  
  BEGIN
    V_STR :='SELECT '||V_SEQ_NAME||'.NEXTVAL FROM DUAL';
    EXECUTE IMMEDIATE V_STR INTO v_seq;
  EXCEPTION
  WHEN OTHERS THEN
    V_ERROR_CODE :=-40;
    V_ERROR_MSG  :=SUBSTR('GET SEQ USING EXECUTE IMMEDIATE '||SQLERRM,1,200);
    RAISE V_ERR;
  END;
  
  p_counter    :=v_seq;
  P_ERROR_CODE := 1;
  P_ERROR_MSG  := '';
  
EXCEPTION
WHEN V_ERR THEN
  P_ERROR_CODE := V_ERROR_CODE;
  P_ERROR_MSG  := V_ERROR_MSG;
WHEN OTHERS THEN
  -- Consider logging the error and then re-raise
  P_ERROR_CODE := -1;
  P_ERROR_MSG  := SUBSTR(SQLERRM(SQLCODE),1,200);
  RAISE;
END SP_SEQ_VCH;